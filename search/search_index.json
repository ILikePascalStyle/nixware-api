{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Nixware Lua API documentation. Loading Lua scripts Drop script into C:\\nixware\\scripts folder. Click refresh in actions list on cheat menu. Select the script from list and press load script . LuaJIT We have LuaJIT (2.0.5) supported FFI tutorial - luajit.org/ext_ffi_tutorial.html Compiling Lua scripts Using: luajit.exe -b script.lua compiled.lua . Download compiler","title":"Home"},{"location":"#home","text":"Nixware Lua API documentation.","title":"Home"},{"location":"#loading-lua-scripts","text":"Drop script into C:\\nixware\\scripts folder. Click refresh in actions list on cheat menu. Select the script from list and press load script .","title":"Loading Lua scripts"},{"location":"#luajit","text":"We have LuaJIT (2.0.5) supported FFI tutorial - luajit.org/ext_ffi_tutorial.html","title":"LuaJIT"},{"location":"#compiling-lua-scripts","text":"Using: luajit.exe -b script.lua compiled.lua . Download compiler","title":"Compiling Lua scripts"},{"location":"callbacks/","text":"callbacks paint() Callback for drawing local function on_paint () surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_line ( 5 , 5 , 20 , 5 ) end client . register_callback ( \"paint\" , on_paint ) unload() Script unload callback local function on_unload () -- restore modifed data end client . register_callback ( \"unload\" , on_unload ) create_move(cmd) - csgo Type Name Description usercmd_t cmd Current command CreateMove callback. Can used for command or send packet modification local MAX_CHOKE = 14 local function on_create_move ( cmd ) -- pitch down cmd . viewangles . pitch = 90 -- backwards cmd . viewangles . yaw = cmd . viewangles . yaw + 180 -- fakelag cmd . send_packet = clientstate . get_choked_commands () >= MAX_CHOKE end client . register_callback ( \"create_move\" , on_create_move ) frame_stage_notify(stage) - csgo Type Name Description number stage Current stage FrameStageNotify callback. Calls every game stage developer.valvesoftware.com/wiki/Frame_Order local FRAME_RENDER_START = 5 local function on_frame_stage_notify ( stage ) if stage ~= FRAME_RENDER_START then return end -- run code on frame render start end client . register_callback ( \"frame_stage_notify\" , on_frame_stage_notify ) fire_game_event(event) - csgo Type Name Description game_event_t event Event FireGameEvent callback. Calls on event se . register_event ( \"round_start\" ) local function on_fire_game_event ( event ) if event : get_name () ~= \"round_start\" then return end client . notify ( \"Round started!\" ) end client . register_callback ( \"fire_game_event\" , on_fire_game_event )","title":"callbacks"},{"location":"callbacks/#callbacks","text":"","title":"callbacks"},{"location":"callbacks/#paint","text":"Callback for drawing local function on_paint () surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_line ( 5 , 5 , 20 , 5 ) end client . register_callback ( \"paint\" , on_paint )","title":"paint()"},{"location":"callbacks/#unload","text":"Script unload callback local function on_unload () -- restore modifed data end client . register_callback ( \"unload\" , on_unload )","title":"unload()"},{"location":"callbacks/#create_movecmd-csgo","text":"Type Name Description usercmd_t cmd Current command CreateMove callback. Can used for command or send packet modification local MAX_CHOKE = 14 local function on_create_move ( cmd ) -- pitch down cmd . viewangles . pitch = 90 -- backwards cmd . viewangles . yaw = cmd . viewangles . yaw + 180 -- fakelag cmd . send_packet = clientstate . get_choked_commands () >= MAX_CHOKE end client . register_callback ( \"create_move\" , on_create_move )","title":"create_move(cmd) - csgo"},{"location":"callbacks/#frame_stage_notifystage-csgo","text":"Type Name Description number stage Current stage FrameStageNotify callback. Calls every game stage developer.valvesoftware.com/wiki/Frame_Order local FRAME_RENDER_START = 5 local function on_frame_stage_notify ( stage ) if stage ~= FRAME_RENDER_START then return end -- run code on frame render start end client . register_callback ( \"frame_stage_notify\" , on_frame_stage_notify )","title":"frame_stage_notify(stage) - csgo"},{"location":"callbacks/#fire_game_eventevent-csgo","text":"Type Name Description game_event_t event Event FireGameEvent callback. Calls on event se . register_event ( \"round_start\" ) local function on_fire_game_event ( event ) if event : get_name () ~= \"round_start\" then return end client . notify ( \"Round started!\" ) end client . register_callback ( \"fire_game_event\" , on_fire_game_event )","title":"fire_game_event(event) - csgo"},{"location":"client/","text":"client table Functions load_script(scriptname) Type Name Description string scriptname Script name Load the script client . load_script ( \"example.lua\" ) unload_script(scriptname) Type Name Description string scriptname Script name Unload the script client . unload_script ( \"example.lua\" ) register_callback(eventname, fn) Type Name Description string eventname Callback name function fn Lua function() get_username() : string Returns your cheat username local username = client . get_username () notify(text) Type Name Description string text Notification text Pushing notification client . notify ( \"Hello world!\" ) get_time_stamp() : number Returns the unix timestamp local timestamp = client . get_time_stamp () get_system_time() : number, number, number Returns the windows time local hours , minutes , seconds = client . get_system_time () is_key_pressed(key) : bool Type Name Description number key Virtual key code Returns true if key pressed local pressed = client . is_key_pressed ( 1 ) is_key_clicked(key) : bool Type Name Description number key Virtual key code Returns true if key clicked local clicked = client . is_key_clicked ( 1 ) find_pattern(module, pattern) : number Type Name Description string module Module string pattern Pattern Returns pattern address local line_goes_through_smoke_addr = client . find_pattern ( \"client_panorama.dll\" , \"55 8B EC 83 EC 08 8B 15 ? ? ? ? 0F 57 C0\" )","title":"client"},{"location":"client/#client-table","text":"","title":"client table"},{"location":"client/#functions","text":"","title":"Functions"},{"location":"client/#load_scriptscriptname","text":"Type Name Description string scriptname Script name Load the script client . load_script ( \"example.lua\" )","title":"load_script(scriptname)"},{"location":"client/#unload_scriptscriptname","text":"Type Name Description string scriptname Script name Unload the script client . unload_script ( \"example.lua\" )","title":"unload_script(scriptname)"},{"location":"client/#register_callbackeventname-fn","text":"Type Name Description string eventname Callback name function fn Lua function()","title":"register_callback(eventname, fn)"},{"location":"client/#get_username-string","text":"Returns your cheat username local username = client . get_username ()","title":"get_username(): string"},{"location":"client/#notifytext","text":"Type Name Description string text Notification text Pushing notification client . notify ( \"Hello world!\" )","title":"notify(text)"},{"location":"client/#get_time_stamp-number","text":"Returns the unix timestamp local timestamp = client . get_time_stamp ()","title":"get_time_stamp(): number"},{"location":"client/#get_system_time-number-number-number","text":"Returns the windows time local hours , minutes , seconds = client . get_system_time ()","title":"get_system_time(): number, number, number"},{"location":"client/#is_key_pressedkey-bool","text":"Type Name Description number key Virtual key code Returns true if key pressed local pressed = client . is_key_pressed ( 1 )","title":"is_key_pressed(key): bool"},{"location":"client/#is_key_clickedkey-bool","text":"Type Name Description number key Virtual key code Returns true if key clicked local clicked = client . is_key_clicked ( 1 )","title":"is_key_clicked(key): bool"},{"location":"client/#find_patternmodule-pattern-number","text":"Type Name Description string module Module string pattern Pattern Returns pattern address local line_goes_through_smoke_addr = client . find_pattern ( \"client_panorama.dll\" , \"55 8B EC 83 EC 08 8B 15 ? ? ? ? 0F 57 C0\" )","title":"find_pattern(module, pattern): number"},{"location":"ui/","text":"ui table Note Elements added from script automaticly saves in config. You can find actual variables list in default.cfg. Functions add_checkbox(label, var_name, def_value) Type Name Description string label Checkbox label string var_name Variable name in config bool def_value Default value Creates checkbox in menu ui . add_checkbox ( \"lua checkbox\" , \"lua_boolean\" , false ) add_slider_int(label, var_name, min, max, def_value) Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates int slider in menu ui . add_slider_int ( \"lua int slider\" , \"lua_integer\" , 0 , 100 , 50 ) add_combo(label, var_name, items, def_value) Type Name Description string label Combobox label string var_name Variable name in config string array items Combobox items number def_value Default value Creates combo box in menu ui . add_combo ( \"lua combo\" , \"lua_integer\" , { \"item1\" , \"item2\" , \"item3\" }, 0 ) add_slider_float(label, var_name, min, max, def_value) Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates float slider in menu ui . add_slider_float ( \"lua float slider\" , \"lua_float\" , 0.0 , 1.0 , 0.3 ) add_keybind(label, var_name, def_key, def_mode) Type Name Description string label Keybind label string var_name Variable name in config number def_key Default key number def_mode Default mode Creates key bind in menu ui . add_keybind ( \"lua key bind\" , \"lua_keybind\" , 0 , 0 ) add_color_edit(label, var_name, show_alpha, def_color) Type Name Description string label Coloredit label string var_name Variable name in config bool show_alpha Enables the alpha modifer color def_color Default color Creates color edit in menu ui . add_color_edit ( \"lua coloredit\" , \"lua_color\" , true , color_t . new ( 255 , 255 , 255 , 255 )) get_bool(var_name) : bool Type Name Description string var_name Variable name in config Getting value from checkbox local value = ui . get_bool ( \"legit_enable\" ) get_int(var_name) : number Type Name Description string var_name Variable name in config Getting value from int slider local value = ui . get_int ( \"visuals_other_nightmode\" ) get_float(var_name) : number Type Name Description string var_name Variable name in config Getting value from float slider local value = ui . get_float ( \"skins_aspect_ratio\" ) get_color(var_name) : color_t Type Name Description string var_name Variable name in config Getting value from color edit local value = ui . get_color ( \"misc_ui_color\" ) get_bind_state() : bool Returns the bind state local bind_active = ui . get_bind_state ( \"legit_autofire_bind\" ) is_visible() : bool Returns true if menu opened local is_menu_opened = ui . is_visible () set_visible(value) Type Name Description bool value Set menu visible or not Setting menu visibility -- close menu ui . set_visible ( false )","title":"ui"},{"location":"ui/#ui-table","text":"Note Elements added from script automaticly saves in config. You can find actual variables list in default.cfg.","title":"ui table"},{"location":"ui/#functions","text":"","title":"Functions"},{"location":"ui/#add_checkboxlabel-var_name-def_value","text":"Type Name Description string label Checkbox label string var_name Variable name in config bool def_value Default value Creates checkbox in menu ui . add_checkbox ( \"lua checkbox\" , \"lua_boolean\" , false )","title":"add_checkbox(label, var_name, def_value)"},{"location":"ui/#add_slider_intlabel-var_name-min-max-def_value","text":"Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates int slider in menu ui . add_slider_int ( \"lua int slider\" , \"lua_integer\" , 0 , 100 , 50 )","title":"add_slider_int(label, var_name, min, max, def_value)"},{"location":"ui/#add_combolabel-var_name-items-def_value","text":"Type Name Description string label Combobox label string var_name Variable name in config string array items Combobox items number def_value Default value Creates combo box in menu ui . add_combo ( \"lua combo\" , \"lua_integer\" , { \"item1\" , \"item2\" , \"item3\" }, 0 )","title":"add_combo(label, var_name, items, def_value)"},{"location":"ui/#add_slider_floatlabel-var_name-min-max-def_value","text":"Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates float slider in menu ui . add_slider_float ( \"lua float slider\" , \"lua_float\" , 0.0 , 1.0 , 0.3 )","title":"add_slider_float(label, var_name, min, max, def_value)"},{"location":"ui/#add_keybindlabel-var_name-def_key-def_mode","text":"Type Name Description string label Keybind label string var_name Variable name in config number def_key Default key number def_mode Default mode Creates key bind in menu ui . add_keybind ( \"lua key bind\" , \"lua_keybind\" , 0 , 0 )","title":"add_keybind(label, var_name, def_key, def_mode)"},{"location":"ui/#add_color_editlabel-var_name-show_alpha-def_color","text":"Type Name Description string label Coloredit label string var_name Variable name in config bool show_alpha Enables the alpha modifer color def_color Default color Creates color edit in menu ui . add_color_edit ( \"lua coloredit\" , \"lua_color\" , true , color_t . new ( 255 , 255 , 255 , 255 ))","title":"add_color_edit(label, var_name, show_alpha, def_color)"},{"location":"ui/#get_boolvar_name-bool","text":"Type Name Description string var_name Variable name in config Getting value from checkbox local value = ui . get_bool ( \"legit_enable\" )","title":"get_bool(var_name): bool"},{"location":"ui/#get_intvar_name-number","text":"Type Name Description string var_name Variable name in config Getting value from int slider local value = ui . get_int ( \"visuals_other_nightmode\" )","title":"get_int(var_name): number"},{"location":"ui/#get_floatvar_name-number","text":"Type Name Description string var_name Variable name in config Getting value from float slider local value = ui . get_float ( \"skins_aspect_ratio\" )","title":"get_float(var_name): number"},{"location":"ui/#get_colorvar_name-color_t","text":"Type Name Description string var_name Variable name in config Getting value from color edit local value = ui . get_color ( \"misc_ui_color\" )","title":"get_color(var_name): color_t"},{"location":"ui/#get_bind_state-bool","text":"Returns the bind state local bind_active = ui . get_bind_state ( \"legit_autofire_bind\" )","title":"get_bind_state(): bool"},{"location":"ui/#is_visible-bool","text":"Returns true if menu opened local is_menu_opened = ui . is_visible ()","title":"is_visible(): bool"},{"location":"ui/#set_visiblevalue","text":"Type Name Description bool value Set menu visible or not Setting menu visibility -- close menu ui . set_visible ( false )","title":"set_visible(value)"},{"location":"sourceengine/clientstate/","text":"clientstate table Functions get_choked_commands() : number Getting the choked commands local choked = clientstate . get_choked_commands () force_full_update() Forcing cl_fullupdate clientstate . force_full_update ()","title":"clientstate"},{"location":"sourceengine/clientstate/#clientstate-table","text":"","title":"clientstate table"},{"location":"sourceengine/clientstate/#functions","text":"","title":"Functions"},{"location":"sourceengine/clientstate/#get_choked_commands-number","text":"Getting the choked commands local choked = clientstate . get_choked_commands ()","title":"get_choked_commands(): number"},{"location":"sourceengine/clientstate/#force_full_update","text":"Forcing cl_fullupdate clientstate . force_full_update ()","title":"force_full_update()"},{"location":"sourceengine/engine/","text":"engine table Functions get_screen_size() : vec2_t Getting the screen size local screen_size = engine . get_screen_size () is_connected() : bool Returns true if connected to server local is_connected = engine . is_connected () is_in_game() : bool Returns true if in game local is_in_game = engine . is_in_game () get_local_player() : number Returns the local player index local lp_index = engine . get_local_player () get_level_name_short() : string Returns current level name (example: de_mirage) local current_map = engine . get_level_name_short () get_player_for_user_id(userid) : number Type Name Description number userid User ID Returns the player index from user id local ent_idx = engine . get_player_for_user_id ( userid ) set_view_angles(viewangles) Type Name Description vec3_t viewangles Viewangles Setting the viewangles engine . set_view_angles ( vec3_t . new ( 0 , 0 , 0 )) get_view_angles() : vec3_t Getting the viewangles local view_ang = engine . get_view_angles () execute_client_cmd(cmd) Type Name Description string cmd Console command Clearing the console engine . execute_client_cmd ( \"clear\" )","title":"engine"},{"location":"sourceengine/engine/#engine-table","text":"","title":"engine table"},{"location":"sourceengine/engine/#functions","text":"","title":"Functions"},{"location":"sourceengine/engine/#get_screen_size-vec2_t","text":"Getting the screen size local screen_size = engine . get_screen_size ()","title":"get_screen_size(): vec2_t"},{"location":"sourceengine/engine/#is_connected-bool","text":"Returns true if connected to server local is_connected = engine . is_connected ()","title":"is_connected(): bool"},{"location":"sourceengine/engine/#is_in_game-bool","text":"Returns true if in game local is_in_game = engine . is_in_game ()","title":"is_in_game(): bool"},{"location":"sourceengine/engine/#get_local_player-number","text":"Returns the local player index local lp_index = engine . get_local_player ()","title":"get_local_player(): number"},{"location":"sourceengine/engine/#get_level_name_short-string","text":"Returns current level name (example: de_mirage) local current_map = engine . get_level_name_short ()","title":"get_level_name_short(): string"},{"location":"sourceengine/engine/#get_player_for_user_iduserid-number","text":"Type Name Description number userid User ID Returns the player index from user id local ent_idx = engine . get_player_for_user_id ( userid )","title":"get_player_for_user_id(userid): number"},{"location":"sourceengine/engine/#set_view_anglesviewangles","text":"Type Name Description vec3_t viewangles Viewangles Setting the viewangles engine . set_view_angles ( vec3_t . new ( 0 , 0 , 0 ))","title":"set_view_angles(viewangles)"},{"location":"sourceengine/engine/#get_view_angles-vec3_t","text":"Getting the viewangles local view_ang = engine . get_view_angles ()","title":"get_view_angles(): vec3_t"},{"location":"sourceengine/engine/#execute_client_cmdcmd","text":"Type Name Description string cmd Console command Clearing the console engine . execute_client_cmd ( \"clear\" )","title":"execute_client_cmd(cmd)"},{"location":"sourceengine/entitylist/","text":"entitylist table Functions get_highest_entity_index() : number Getting highest entity index local idx = entitylist . get_highest_entity_index () get_local_player() : number Getting local player index local idx = entitylist . get_local_player () get_entity_by_index(index) : entity_t Type Name Description number index Entity index Getting local player by index local lp = entitylist . get_entity_by_index ( entitylist . get_local_player ()) get_entity_by_handle(handle) : entity_t Type Name Description number handle Entity handle get_players(type) : entity_t array Type Name Description number type Type Getting the players array 0 - enemies only 1 - teammates only 2 - all players local players = entitylist . get_players ( 0 ) for i = 1 , # players do local player = players [ i ] end get_entities_by_class(classname) : entity_t array Type Name Description string classname Class name Getting the entities by class name local entities = entitylist . get_entities_by_class ( \"CFogController\" ) get_entities_by_class_id(classid) : entity_t array Type Name Description number classid Class id Getting the entities by class id local entities = entitylist . get_entities_by_class_id ( 78 )","title":"entitylist"},{"location":"sourceengine/entitylist/#entitylist-table","text":"","title":"entitylist table"},{"location":"sourceengine/entitylist/#functions","text":"","title":"Functions"},{"location":"sourceengine/entitylist/#get_highest_entity_index-number","text":"Getting highest entity index local idx = entitylist . get_highest_entity_index ()","title":"get_highest_entity_index(): number"},{"location":"sourceengine/entitylist/#get_local_player-number","text":"Getting local player index local idx = entitylist . get_local_player ()","title":"get_local_player(): number"},{"location":"sourceengine/entitylist/#get_entity_by_indexindex-entity_t","text":"Type Name Description number index Entity index Getting local player by index local lp = entitylist . get_entity_by_index ( entitylist . get_local_player ())","title":"get_entity_by_index(index): entity_t"},{"location":"sourceengine/entitylist/#get_entity_by_handlehandle-entity_t","text":"Type Name Description number handle Entity handle","title":"get_entity_by_handle(handle): entity_t"},{"location":"sourceengine/entitylist/#get_playerstype-entity_t-array","text":"Type Name Description number type Type Getting the players array 0 - enemies only 1 - teammates only 2 - all players local players = entitylist . get_players ( 0 ) for i = 1 , # players do local player = players [ i ] end","title":"get_players(type): entity_t array"},{"location":"sourceengine/entitylist/#get_entities_by_classclassname-entity_t-array","text":"Type Name Description string classname Class name Getting the entities by class name local entities = entitylist . get_entities_by_class ( \"CFogController\" )","title":"get_entities_by_class(classname): entity_t array"},{"location":"sourceengine/entitylist/#get_entities_by_class_idclassid-entity_t-array","text":"Type Name Description number classid Class id Getting the entities by class id local entities = entitylist . get_entities_by_class_id ( 78 )","title":"get_entities_by_class_id(classid): entity_t array"},{"location":"sourceengine/globalvars/","text":"globalvars table Functions get_real_time() : number Returns the client time local rt = globalvars . get_real_time () get_frame_count() : number Returns the frame count local frame_count = globalvars . frame_count () get_absolute_frametime() : number Returns the absolute frame time local absolute_frametime = globalvars . get_absolute_frametime () get_current_time() : number Returns the server time local current_time = globalvars . get_current_time () get_frame_time() : number Returns the frame time local frame_time = globalvars . get_frame_time () get_max_clients() : number Returns the max clients value local max_clients = globalvars . get_max_clients () get_tick_count() : number Returns the current tickcount local tick_count = globalvars . get_tick_count () get_interval_per_tick() : number Returns the interval per tick local tick_count = globalvars . get_interval_per_tick ()","title":"globalvars"},{"location":"sourceengine/globalvars/#globalvars-table","text":"","title":"globalvars table"},{"location":"sourceengine/globalvars/#functions","text":"","title":"Functions"},{"location":"sourceengine/globalvars/#get_real_time-number","text":"Returns the client time local rt = globalvars . get_real_time ()","title":"get_real_time(): number"},{"location":"sourceengine/globalvars/#get_frame_count-number","text":"Returns the frame count local frame_count = globalvars . frame_count ()","title":"get_frame_count(): number"},{"location":"sourceengine/globalvars/#get_absolute_frametime-number","text":"Returns the absolute frame time local absolute_frametime = globalvars . get_absolute_frametime ()","title":"get_absolute_frametime(): number"},{"location":"sourceengine/globalvars/#get_current_time-number","text":"Returns the server time local current_time = globalvars . get_current_time ()","title":"get_current_time(): number"},{"location":"sourceengine/globalvars/#get_frame_time-number","text":"Returns the frame time local frame_time = globalvars . get_frame_time ()","title":"get_frame_time(): number"},{"location":"sourceengine/globalvars/#get_max_clients-number","text":"Returns the max clients value local max_clients = globalvars . get_max_clients ()","title":"get_max_clients(): number"},{"location":"sourceengine/globalvars/#get_tick_count-number","text":"Returns the current tickcount local tick_count = globalvars . get_tick_count ()","title":"get_tick_count(): number"},{"location":"sourceengine/globalvars/#get_interval_per_tick-number","text":"Returns the interval per tick local tick_count = globalvars . get_interval_per_tick ()","title":"get_interval_per_tick(): number"},{"location":"sourceengine/se/","text":"se table (source engine utilities) Functions world_to_screen(pos) : vec2_t Type Name Description vec3_t pos World position Getting the 2d pos from world position local pos2d = se . world_to_screen ( pos ) set_clantag(tag) Type Name Description string tag Wanted clantag Setting the clantag se . set_clantag ( \"nixware.cc\" ) set_name(name) Type Name Description string name Wanted name Setting the name se . set_name ( \"nixware.cc\" ) get_convar(name) : convar_t Type Name Description string name Console variable name Returns convar_t object se . get_convar ( \"r_jigglebones\" ) get_netvar(table, netvar) : number Type Name Description string table Table name string netvar Netvar name Returns the netvar offset se . get_netvar ( \"DT_BasePlayer\" , \"m_iHealth\" ) get_latency() : number Returns current latency local ping = se . get_latency () register_event(eventname) Type Name Description string eventname Event name Register the event for fire_game_event callback se . register_event ( \"player_death\" ) create_interface(module_name, interface_version) : number Type Name Description string module_name Module name string interface_version Interface version Getting the interface address local g_model_info = ffi . cast ( \"void*\" , se . create_interface ( \"engine.dll\" , \"VModelInfoClient004\" ))","title":"se"},{"location":"sourceengine/se/#se-table-source-engine-utilities","text":"","title":"se table (source engine utilities)"},{"location":"sourceengine/se/#functions","text":"","title":"Functions"},{"location":"sourceengine/se/#world_to_screenpos-vec2_t","text":"Type Name Description vec3_t pos World position Getting the 2d pos from world position local pos2d = se . world_to_screen ( pos )","title":"world_to_screen(pos): vec2_t"},{"location":"sourceengine/se/#set_clantagtag","text":"Type Name Description string tag Wanted clantag Setting the clantag se . set_clantag ( \"nixware.cc\" )","title":"set_clantag(tag)"},{"location":"sourceengine/se/#set_namename","text":"Type Name Description string name Wanted name Setting the name se . set_name ( \"nixware.cc\" )","title":"set_name(name)"},{"location":"sourceengine/se/#get_convarname-convar_t","text":"Type Name Description string name Console variable name Returns convar_t object se . get_convar ( \"r_jigglebones\" )","title":"get_convar(name): convar_t"},{"location":"sourceengine/se/#get_netvartable-netvar-number","text":"Type Name Description string table Table name string netvar Netvar name Returns the netvar offset se . get_netvar ( \"DT_BasePlayer\" , \"m_iHealth\" )","title":"get_netvar(table, netvar): number"},{"location":"sourceengine/se/#get_latency-number","text":"Returns current latency local ping = se . get_latency ()","title":"get_latency(): number"},{"location":"sourceengine/se/#register_eventeventname","text":"Type Name Description string eventname Event name Register the event for fire_game_event callback se . register_event ( \"player_death\" )","title":"register_event(eventname)"},{"location":"sourceengine/se/#create_interfacemodule_name-interface_version-number","text":"Type Name Description string module_name Module name string interface_version Interface version Getting the interface address local g_model_info = ffi . cast ( \"void*\" , se . create_interface ( \"engine.dll\" , \"VModelInfoClient004\" ))","title":"create_interface(module_name, interface_version): number"},{"location":"sourceengine/surface/","text":"surface table Functions play_sound(soundname) Type Name Description string soundname Sound name Playing the sound surface . play_sound ( \"resource/warning.wav\" ) get_cursor_pos() : vec2_t Returns the cursor position local x , y = surface . get_cursor_pos () setup_font(fontname, tall, weight, blur, scanlines, flags) : font Type Name Description string fontname Windows font name number tall Font tall number weight Font weight number scanlines Font scanlines number flags Font flags Creating the font Surface font flags: developer.valvesoftware.com/wiki/EFontFlags local font = surface . setup_font ( \"Tahoma\" , 16 , 500 , 0 , 1 , 0x200 ) draw_filled_rect(start_pos_x, start_pos_y, end_pos_x, end_pos_y) Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Drawing the filled rect surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_filled_rect ( 5 , 5 , 10 , 10 ) draw_filled_rect_fade(start_pos_x, start_pos_y, end_pos_x, end_pos_y, first_alpha, next_alpha, is_horisontal) Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y number first_alpha First Alpha number next_alpha Next Alpha bool is_horisontal Is horisontal Drawing the faded rect surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_filled_rect_fade ( 5 , 5 , 10 , 10 , 255 , 0 , false ) draw_outlined_rect(start_pos_x, start_pos_y, end_pos_x, end_pos_y) Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Drawing the rect surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_outlined_rect ( 5 , 5 , 10 , 10 ) draw_set_color(start_pos_x, start_pos_y, end_pos_x, end_pos_y) Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Setting color of the next drawing element surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) get_text_size(font, text) : number, number Type Name Description font font Font string text Text Returns width and height text size local w , h = surface . get_text_size ( font , \"string\" ) draw_line(start_pos_x, start_pos_y, end_pos_x, end_pos_y) Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Drawing horisontal line surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_line ( 5 , 5 , 20 , 5 ) draw_outlined_circle(pos_x, pos_y, radius, segments) Type Name Description number pos_x Position x number pos_y Position y number radius Radius number segments Segments Drawing the circle surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_outlined_circle ( 500 , 500 , 30 , 30 ) draw_set_text_font(font) Type Name Description font font Font Setting the next text font -- setup this font only once local font = surface . setup_font ( \"Tahoma\" , 16 , 500 , 0 , 1 , 0x200 ) surface . draw_set_text_font ( font ) draw_set_text_color(color) Type Name Description color_t color Color Setting the next text color surface . draw_set_text_color ( color_t . new ( 255 , 0 , 0 , 255 )) draw_set_text_pos(pos_x, pos_y) Type Name Description number pos_x Position x number pos_y Position y Setting the next text pos surface . draw_set_text_pos ( 5 , 5 ) draw_print_text(text) Type Name Description string text Text Print text surface . draw_print_text ( text ) draw_textured_polygon(points_num, points, color) Type Name Description number points_num Num points vec2_t array points Points color_t color Color Render the textured polygon -- https://i.imgur.com/OjcQf6i.png local points = { vec2_t . new ( 5 , 5 ), vec2_t . new ( 15 , 5 ), vec2_t . new ( 10 , 15 ) } surface . draw_textured_polygon ( 3 , points , color_t . new ( 255 , 0 , 0 , 255 ))","title":"surface"},{"location":"sourceengine/surface/#surface-table","text":"","title":"surface table"},{"location":"sourceengine/surface/#functions","text":"","title":"Functions"},{"location":"sourceengine/surface/#play_soundsoundname","text":"Type Name Description string soundname Sound name Playing the sound surface . play_sound ( \"resource/warning.wav\" )","title":"play_sound(soundname)"},{"location":"sourceengine/surface/#get_cursor_pos-vec2_t","text":"Returns the cursor position local x , y = surface . get_cursor_pos ()","title":"get_cursor_pos(): vec2_t"},{"location":"sourceengine/surface/#setup_fontfontname-tall-weight-blur-scanlines-flags-font","text":"Type Name Description string fontname Windows font name number tall Font tall number weight Font weight number scanlines Font scanlines number flags Font flags Creating the font Surface font flags: developer.valvesoftware.com/wiki/EFontFlags local font = surface . setup_font ( \"Tahoma\" , 16 , 500 , 0 , 1 , 0x200 )","title":"setup_font(fontname, tall, weight, blur, scanlines, flags): font"},{"location":"sourceengine/surface/#draw_filled_rectstart_pos_x-start_pos_y-end_pos_x-end_pos_y","text":"Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Drawing the filled rect surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_filled_rect ( 5 , 5 , 10 , 10 )","title":"draw_filled_rect(start_pos_x, start_pos_y, end_pos_x, end_pos_y)"},{"location":"sourceengine/surface/#draw_filled_rect_fadestart_pos_x-start_pos_y-end_pos_x-end_pos_y-first_alpha-next_alpha-is_horisontal","text":"Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y number first_alpha First Alpha number next_alpha Next Alpha bool is_horisontal Is horisontal Drawing the faded rect surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_filled_rect_fade ( 5 , 5 , 10 , 10 , 255 , 0 , false )","title":"draw_filled_rect_fade(start_pos_x, start_pos_y, end_pos_x, end_pos_y, first_alpha, next_alpha, is_horisontal)"},{"location":"sourceengine/surface/#draw_outlined_rectstart_pos_x-start_pos_y-end_pos_x-end_pos_y","text":"Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Drawing the rect surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_outlined_rect ( 5 , 5 , 10 , 10 )","title":"draw_outlined_rect(start_pos_x, start_pos_y, end_pos_x, end_pos_y)"},{"location":"sourceengine/surface/#draw_set_colorstart_pos_x-start_pos_y-end_pos_x-end_pos_y","text":"Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Setting color of the next drawing element surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 ))","title":"draw_set_color(start_pos_x, start_pos_y, end_pos_x, end_pos_y)"},{"location":"sourceengine/surface/#get_text_sizefont-text-number-number","text":"Type Name Description font font Font string text Text Returns width and height text size local w , h = surface . get_text_size ( font , \"string\" )","title":"get_text_size(font, text): number, number"},{"location":"sourceengine/surface/#draw_linestart_pos_x-start_pos_y-end_pos_x-end_pos_y","text":"Type Name Description number start_pos_x Start position x number start_pos_y Start position y number end_pos_x End position x number end_pos_y End position y Drawing horisontal line surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_line ( 5 , 5 , 20 , 5 )","title":"draw_line(start_pos_x, start_pos_y, end_pos_x, end_pos_y)"},{"location":"sourceengine/surface/#draw_outlined_circlepos_x-pos_y-radius-segments","text":"Type Name Description number pos_x Position x number pos_y Position y number radius Radius number segments Segments Drawing the circle surface . draw_set_color ( color_t . new ( 255 , 0 , 0 , 255 )) surface . draw_outlined_circle ( 500 , 500 , 30 , 30 )","title":"draw_outlined_circle(pos_x, pos_y, radius, segments)"},{"location":"sourceengine/surface/#draw_set_text_fontfont","text":"Type Name Description font font Font Setting the next text font -- setup this font only once local font = surface . setup_font ( \"Tahoma\" , 16 , 500 , 0 , 1 , 0x200 ) surface . draw_set_text_font ( font )","title":"draw_set_text_font(font)"},{"location":"sourceengine/surface/#draw_set_text_colorcolor","text":"Type Name Description color_t color Color Setting the next text color surface . draw_set_text_color ( color_t . new ( 255 , 0 , 0 , 255 ))","title":"draw_set_text_color(color)"},{"location":"sourceengine/surface/#draw_set_text_pospos_x-pos_y","text":"Type Name Description number pos_x Position x number pos_y Position y Setting the next text pos surface . draw_set_text_pos ( 5 , 5 )","title":"draw_set_text_pos(pos_x, pos_y)"},{"location":"sourceengine/surface/#draw_print_texttext","text":"Type Name Description string text Text Print text surface . draw_print_text ( text )","title":"draw_print_text(text)"},{"location":"sourceengine/surface/#draw_textured_polygonpoints_num-points-color","text":"Type Name Description number points_num Num points vec2_t array points Points color_t color Color Render the textured polygon -- https://i.imgur.com/OjcQf6i.png local points = { vec2_t . new ( 5 , 5 ), vec2_t . new ( 15 , 5 ), vec2_t . new ( 10 , 15 ) } surface . draw_textured_polygon ( 3 , points , color_t . new ( 255 , 0 , 0 , 255 ))","title":"draw_textured_polygon(points_num, points, color)"},{"location":"sourceengine/trace/","text":"trace table Functions line(skip_entindex, mask, start, end) : number, number Type Name Description number skip_entindex Skip entity index number mask Trace mask vec3_t start Start trace position vec3_t end End trace position Tracing local fraction , hit_entity_index = trace . line ( engine . get_local_player (), mask , start , end )","title":"trace"},{"location":"sourceengine/trace/#trace-table","text":"","title":"trace table"},{"location":"sourceengine/trace/#functions","text":"","title":"Functions"},{"location":"sourceengine/trace/#lineskip_entindex-mask-start-end-number-number","text":"Type Name Description number skip_entindex Skip entity index number mask Trace mask vec3_t start Start trace position vec3_t end End trace position Tracing local fraction , hit_entity_index = trace . line ( engine . get_local_player (), mask , start , end )","title":"line(skip_entindex, mask, start, end): number, number"},{"location":"sourceengine/types/convar_t/","text":"convar_t Functions get_int() : number Returns the int value local convar = se . get_convar ( \"r_jigglebones\" ) local value = convar : get_int () get_float() : number Returns the float value local convar = se . get_convar ( \"r_aspectratio\" ) local value = convar : get_float () get_string() : string Returns the string local convar = se . get_convar ( \"sv_skyname\" ) local str = convar : get_string () set_int(value) Type Name number value Set the int value local convar = se . get_convar ( \"r_jigglebones\" ) local value = convar : set_int ( 0 ) set_float(value) Type Name number value Set the float value local convar = se . get_convar ( \"r_aspectratio\" ) local value = convar : set_float ( 1.333 ) set_string(value) Type Name string value Set the string local convar = se . get_convar ( \"sv_skyname\" ) convar : set_string ( \"sky_dust\" )","title":"convar_t"},{"location":"sourceengine/types/convar_t/#convar_t","text":"","title":"convar_t"},{"location":"sourceengine/types/convar_t/#functions","text":"","title":"Functions"},{"location":"sourceengine/types/convar_t/#get_int-number","text":"Returns the int value local convar = se . get_convar ( \"r_jigglebones\" ) local value = convar : get_int ()","title":"get_int(): number"},{"location":"sourceengine/types/convar_t/#get_float-number","text":"Returns the float value local convar = se . get_convar ( \"r_aspectratio\" ) local value = convar : get_float ()","title":"get_float(): number"},{"location":"sourceengine/types/convar_t/#get_string-string","text":"Returns the string local convar = se . get_convar ( \"sv_skyname\" ) local str = convar : get_string ()","title":"get_string(): string"},{"location":"sourceengine/types/convar_t/#set_intvalue","text":"Type Name number value Set the int value local convar = se . get_convar ( \"r_jigglebones\" ) local value = convar : set_int ( 0 )","title":"set_int(value)"},{"location":"sourceengine/types/convar_t/#set_floatvalue","text":"Type Name number value Set the float value local convar = se . get_convar ( \"r_aspectratio\" ) local value = convar : set_float ( 1.333 )","title":"set_float(value)"},{"location":"sourceengine/types/convar_t/#set_stringvalue","text":"Type Name string value Set the string local convar = se . get_convar ( \"sv_skyname\" ) convar : set_string ( \"sky_dust\" )","title":"set_string(value)"},{"location":"sourceengine/types/entity_t/","text":"entity_t Functions is_dormant() : bool Returns true if entity is in dormant local is_dormant = entity : is_dormant () is_alive() : bool Returns true if entity is alive local is_alive = entity : is_alive () get_bbox() : rect_t Returns the bounding box local bbox = entity : get_bbox () get_player_hitbox_pos(hitbox_num) : vec3_t Type Name Description number hitbox_num Hitbox number Returns the hitbox pos local headpos = entity : get_player_hitbox_pos ( 0 ) get_address() : number Returns the entity address local addr = entity : get_address () get_prop_bool(offset) : bool Type Name Description number offset Prop offset Returns the boolean value by offset get_prop_int(offset) : number Type Name Description number offset Prop offset Returns the integer value by offset get_prop_float(offset) : number Type Name Description number offset Prop offset Returns the float value by offset get_prop_short(offset) : number Type Name Description number offset Prop offset Returns the short value by offset get_prop_double(offset) : number Type Name Description number offset Prop offset Returns the double value by offset get_prop_vector(offset) : vec3_t Type Name Description number offset Prop offset Returns the vector by offset get_prop_angle(offset) : angle_t Type Name Description number offset Prop offset Returns the angle by offset set_prop_bool(offset, value) Type Name Description number offset Prop offset bool value Value Setting the boolean value by offset set_prop_int(offset, value) Type Name Description number offset Prop offset number value Value Setting the integer value by offset set_prop_float(offset, value) Type Name Description number offset Prop offset number value Value Setting the float value by offset set_prop_short(offset, value) Type Name Description number offset Prop offset number value Value Setting the short value by offset set_prop_double(offset, value) Type Name Description number offset Prop offset number value Value Setting the double value by offset set_prop_vector(offset, value) Type Name Description number offset Prop offset vec3_t value Value Setting the vector by offset set_prop_angle(offset, value) Type Name Description number offset Prop offset angle_t value Value Setting the angle by offset","title":"entity_t"},{"location":"sourceengine/types/entity_t/#entity_t","text":"","title":"entity_t"},{"location":"sourceengine/types/entity_t/#functions","text":"","title":"Functions"},{"location":"sourceengine/types/entity_t/#is_dormant-bool","text":"Returns true if entity is in dormant local is_dormant = entity : is_dormant ()","title":"is_dormant(): bool"},{"location":"sourceengine/types/entity_t/#is_alive-bool","text":"Returns true if entity is alive local is_alive = entity : is_alive ()","title":"is_alive(): bool"},{"location":"sourceengine/types/entity_t/#get_bbox-rect_t","text":"Returns the bounding box local bbox = entity : get_bbox ()","title":"get_bbox(): rect_t"},{"location":"sourceengine/types/entity_t/#get_player_hitbox_poshitbox_num-vec3_t","text":"Type Name Description number hitbox_num Hitbox number Returns the hitbox pos local headpos = entity : get_player_hitbox_pos ( 0 )","title":"get_player_hitbox_pos(hitbox_num): vec3_t"},{"location":"sourceengine/types/entity_t/#get_address-number","text":"Returns the entity address local addr = entity : get_address ()","title":"get_address(): number"},{"location":"sourceengine/types/entity_t/#get_prop_booloffset-bool","text":"Type Name Description number offset Prop offset Returns the boolean value by offset","title":"get_prop_bool(offset): bool"},{"location":"sourceengine/types/entity_t/#get_prop_intoffset-number","text":"Type Name Description number offset Prop offset Returns the integer value by offset","title":"get_prop_int(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_floatoffset-number","text":"Type Name Description number offset Prop offset Returns the float value by offset","title":"get_prop_float(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_shortoffset-number","text":"Type Name Description number offset Prop offset Returns the short value by offset","title":"get_prop_short(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_doubleoffset-number","text":"Type Name Description number offset Prop offset Returns the double value by offset","title":"get_prop_double(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_vectoroffset-vec3_t","text":"Type Name Description number offset Prop offset Returns the vector by offset","title":"get_prop_vector(offset): vec3_t"},{"location":"sourceengine/types/entity_t/#get_prop_angleoffset-angle_t","text":"Type Name Description number offset Prop offset Returns the angle by offset","title":"get_prop_angle(offset): angle_t"},{"location":"sourceengine/types/entity_t/#set_prop_booloffset-value","text":"Type Name Description number offset Prop offset bool value Value Setting the boolean value by offset","title":"set_prop_bool(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_intoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the integer value by offset","title":"set_prop_int(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_floatoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the float value by offset","title":"set_prop_float(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_shortoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the short value by offset","title":"set_prop_short(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_doubleoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the double value by offset","title":"set_prop_double(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_vectoroffset-value","text":"Type Name Description number offset Prop offset vec3_t value Value Setting the vector by offset","title":"set_prop_vector(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_angleoffset-value","text":"Type Name Description number offset Prop offset angle_t value Value Setting the angle by offset","title":"set_prop_angle(offset, value)"},{"location":"sourceengine/types/game_event_t/","text":"game_event_t Functions get_name(): string Returns the event name local event_name = event : get_name () get_bool(key_name, def_value): bool Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the boolean value from event if event : get_name () == \"player_chat\" then local teamonly = event : get_bool ( \"teamonly\" , false ) end get_int(key_name, def_value): number Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the int value from event if event : get_name () == \"player_death\" then local attacker = event : get_int ( \"attacker\" , 0 ) end get_float(key_name, def_value): number Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the float value from event if event : get_name () == \"bullet_impact\" then local impact_x = event : get_float ( \"x\" , 0 ) end get_string(key_name, def_value): string Type Name Description string key_name Event key name string def_value Default return value if key not found Returns the string from event if event : get_name () == \"player_death\" then local weapon = event : get_string ( \"weapon\" , \"\" ) end set_bool(key_name, value) Type Name Description string key_name Event key name bool value New value Changes the key value if event : get_name () == \"player_chat\" then event : set_bool ( \"teamonly\" , false ) end set_int(key_name, value) Type Name Description string key_name Event key name number value New value Changes the key value if event : get_name () == \"player_death\" then event : set_int ( \"attacker\" , 0 ) end set_float(key_name, value) Type Name Description string key_name Event key name number value New value Changes the key value if event : get_name () == \"bullet_impact\" then event : set_float ( \"x\" , 0 ) end set_string(key_name, value) Type Name Description string key_name Event key name string value New value Changes the key value if event : get_name () == \"player_death\" then event : set_string ( \"weapon\" , \"knife_karambit\" ) end","title":"game_event_t"},{"location":"sourceengine/types/game_event_t/#game_event_t","text":"","title":"game_event_t"},{"location":"sourceengine/types/game_event_t/#functions","text":"","title":"Functions"},{"location":"sourceengine/types/game_event_t/#get_name-string","text":"Returns the event name local event_name = event : get_name ()","title":"get_name(): string"},{"location":"sourceengine/types/game_event_t/#get_boolkey_name-def_value-bool","text":"Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the boolean value from event if event : get_name () == \"player_chat\" then local teamonly = event : get_bool ( \"teamonly\" , false ) end","title":"get_bool(key_name, def_value): bool"},{"location":"sourceengine/types/game_event_t/#get_intkey_name-def_value-number","text":"Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the int value from event if event : get_name () == \"player_death\" then local attacker = event : get_int ( \"attacker\" , 0 ) end","title":"get_int(key_name, def_value): number"},{"location":"sourceengine/types/game_event_t/#get_floatkey_name-def_value-number","text":"Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the float value from event if event : get_name () == \"bullet_impact\" then local impact_x = event : get_float ( \"x\" , 0 ) end","title":"get_float(key_name, def_value): number"},{"location":"sourceengine/types/game_event_t/#get_stringkey_name-def_value-string","text":"Type Name Description string key_name Event key name string def_value Default return value if key not found Returns the string from event if event : get_name () == \"player_death\" then local weapon = event : get_string ( \"weapon\" , \"\" ) end","title":"get_string(key_name, def_value): string"},{"location":"sourceengine/types/game_event_t/#set_boolkey_name-value","text":"Type Name Description string key_name Event key name bool value New value Changes the key value if event : get_name () == \"player_chat\" then event : set_bool ( \"teamonly\" , false ) end","title":"set_bool(key_name, value)"},{"location":"sourceengine/types/game_event_t/#set_intkey_name-value","text":"Type Name Description string key_name Event key name number value New value Changes the key value if event : get_name () == \"player_death\" then event : set_int ( \"attacker\" , 0 ) end","title":"set_int(key_name, value)"},{"location":"sourceengine/types/game_event_t/#set_floatkey_name-value","text":"Type Name Description string key_name Event key name number value New value Changes the key value if event : get_name () == \"bullet_impact\" then event : set_float ( \"x\" , 0 ) end","title":"set_float(key_name, value)"},{"location":"sourceengine/types/game_event_t/#set_stringkey_name-value","text":"Type Name Description string key_name Event key name string value New value Changes the key value if event : get_name () == \"player_death\" then event : set_string ( \"weapon\" , \"knife_karambit\" ) end","title":"set_string(key_name, value)"},{"location":"sourceengine/types/usercmd_t/","text":"usercmd_t Type Name bool send_packet number command_number number tick_count angle_t viewangles number forwardmove number sidemove number upmove number buttons number random_seed number mousedx number mousedy","title":"usercmd_t"},{"location":"sourceengine/types/usercmd_t/#usercmd_t","text":"Type Name bool send_packet number command_number number tick_count angle_t viewangles number forwardmove number sidemove number upmove number buttons number random_seed number mousedx number mousedy","title":"usercmd_t"},{"location":"types/angle_t/","text":"angle_t Type Name number pitch number yaw number roll Functions new(x, y, z) : angle_t Type Name number x number y number z Constructor local angle = angle_t . new ( 0 , 0 , 0 )","title":"angle_t"},{"location":"types/angle_t/#angle_t","text":"Type Name number pitch number yaw number roll","title":"angle_t"},{"location":"types/angle_t/#functions","text":"","title":"Functions"},{"location":"types/angle_t/#newx-y-z-angle_t","text":"Type Name number x number y number z Constructor local angle = angle_t . new ( 0 , 0 , 0 )","title":"new(x, y, z): angle_t"},{"location":"types/color_t/","text":"color_t Type Name number r number g number b number a Functions new(red, green, blue, alpha) : color_t Type Name number x number y number z Constructor local color = color_t . new ( 255 , 0 , 0 , 255 )","title":"color_t"},{"location":"types/color_t/#color_t","text":"Type Name number r number g number b number a","title":"color_t"},{"location":"types/color_t/#functions","text":"","title":"Functions"},{"location":"types/color_t/#newred-green-blue-alpha-color_t","text":"Type Name number x number y number z Constructor local color = color_t . new ( 255 , 0 , 0 , 255 )","title":"new(red, green, blue, alpha): color_t"},{"location":"types/rect_t/","text":"rect_t Type Name number left number top number right number bottom Functions new(left, top, right, bottom) : rect_t Type Name number left number top number right number bottom Constructor local rect = rect_t . new ( 0 , 0 , 0 , 0 )","title":"rect_t"},{"location":"types/rect_t/#rect_t","text":"Type Name number left number top number right number bottom","title":"rect_t"},{"location":"types/rect_t/#functions","text":"","title":"Functions"},{"location":"types/rect_t/#newleft-top-right-bottom-rect_t","text":"Type Name number left number top number right number bottom Constructor local rect = rect_t . new ( 0 , 0 , 0 , 0 )","title":"new(left, top, right, bottom): rect_t"},{"location":"types/vec2_t/","text":"vec2_t Type Name number x number y Functions new(x, y) : vec2_t Type Name number x number y Constructor local vector2d = vec2_t . new ( 0 , 0 ) length() : number Returns the length of vector local vector = vec2_t . new ( 100 , 100 ) local vector_length = vector : length ()","title":"vec2_t"},{"location":"types/vec2_t/#vec2_t","text":"Type Name number x number y","title":"vec2_t"},{"location":"types/vec2_t/#functions","text":"","title":"Functions"},{"location":"types/vec2_t/#newx-y-vec2_t","text":"Type Name number x number y Constructor local vector2d = vec2_t . new ( 0 , 0 )","title":"new(x, y): vec2_t"},{"location":"types/vec2_t/#length-number","text":"Returns the length of vector local vector = vec2_t . new ( 100 , 100 ) local vector_length = vector : length ()","title":"length(): number"},{"location":"types/vec3_t/","text":"vec3_t Type Name number x number y number z Functions new(x, y, z) : vec3_t Type Name number x number y number z Constructor local vector = vec3_t . new ( 0 , 0 , 0 ) length() : number Returns the length of vector local vector = vec3_t . new ( 100 , 100 , 100 ) local vector_length = vector : length ()","title":"vec3_t"},{"location":"types/vec3_t/#vec3_t","text":"Type Name number x number y number z","title":"vec3_t"},{"location":"types/vec3_t/#functions","text":"","title":"Functions"},{"location":"types/vec3_t/#newx-y-z-vec3_t","text":"Type Name number x number y number z Constructor local vector = vec3_t . new ( 0 , 0 , 0 )","title":"new(x, y, z): vec3_t"},{"location":"types/vec3_t/#length-number","text":"Returns the length of vector local vector = vec3_t . new ( 100 , 100 , 100 ) local vector_length = vector : length ()","title":"length(): number"}]}