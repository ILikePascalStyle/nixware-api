{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Nixware Lua API documentation. Loading Lua scripts Drop script into C:\\nixware\\scripts folder. Click refresh in actions list on cheat menu. Select the script from list and press load script . LuaJIT We have LuaJIT (2.0.5) supported FFI tutorial - luajit.org/ext_ffi_tutorial.html VSCode snippets Install from marketplace: marketplace.visualstudio.com/items?itemName=Nixer1337.nixware-lua-api-snippets Compiling Lua scripts Using: luajit.exe -b script.lua compiled.lua . Download compiler","title":"Home"},{"location":"#home","text":"Nixware Lua API documentation.","title":"Home"},{"location":"#loading-lua-scripts","text":"Drop script into C:\\nixware\\scripts folder. Click refresh in actions list on cheat menu. Select the script from list and press load script .","title":"Loading Lua scripts"},{"location":"#luajit","text":"We have LuaJIT (2.0.5) supported FFI tutorial - luajit.org/ext_ffi_tutorial.html","title":"LuaJIT"},{"location":"#vscode-snippets","text":"Install from marketplace: marketplace.visualstudio.com/items?itemName=Nixer1337.nixware-lua-api-snippets","title":"VSCode snippets"},{"location":"#compiling-lua-scripts","text":"Using: luajit.exe -b script.lua compiled.lua . Download compiler","title":"Compiling Lua scripts"},{"location":"callbacks/","text":"callbacks paint() Callback for drawing 1 2 3 4 5 6 7 8 local font = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 ) local function on_paint () renderer . text ( \"hello world!\" , font , vec2_t . new ( 20 , 20 ), 50 , color_t . new ( 255 , 255 , 255 , 255 )) renderer . rect_filled ( vec2_t . new ( 30 , 30 ), vec2_t . new ( 40 , 40 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint ) unload() Script unload callback 1 2 3 4 5 local function on_unload () -- restore modifed data end client . register_callback ( \"unload\" , on_unload ) create_move(cmd) - csgo Type Name Description usercmd_t cmd Current command CreateMove callback. Can used for command or send packet modification 1 2 3 4 5 6 7 8 9 10 11 12 13 14 local MAX_CHOKE = 14 local function on_create_move ( cmd ) -- pitch down cmd . viewangles . pitch = 90 -- backwards cmd . viewangles . yaw = cmd . viewangles . yaw + 180 -- fakelag cmd . send_packet = clientstate . get_choked_commands () >= MAX_CHOKE end client . register_callback ( \"create_move\" , on_create_move ) frame_stage_notify(stage) - csgo Type Name Description number stage Current stage FrameStageNotify callback. Calls every game stage developer.valvesoftware.com/wiki/Frame_Order 1 2 3 4 5 6 7 8 9 local FRAME_RENDER_START = 5 local function on_frame_stage_notify ( stage ) if stage ~= FRAME_RENDER_START then return end -- run code on frame render start end client . register_callback ( \"frame_stage_notify\" , on_frame_stage_notify ) fire_game_event(event) - csgo Type Name Description game_event_t event Event FireGameEvent callback. Calls on event 1 2 3 4 5 6 7 8 9 se . register_event ( \"round_start\" ) local function on_fire_game_event ( event ) if event : get_name () ~= \"round_start\" then return end client . notify ( \"Round started!\" ) end client . register_callback ( \"fire_game_event\" , on_fire_game_event ) shot_fired(info) - csgo Type Name Description shot_info_t info Shot info ShotFired callback. Calls on shot 1 2 3 4 5 local function on_shot_fired ( info ) client . notify ( \"test\" ) end client . register_callback ( \"shot_fired\" , on_shot_fired )","title":"callbacks"},{"location":"callbacks/#callbacks","text":"","title":"callbacks"},{"location":"callbacks/#paint","text":"Callback for drawing 1 2 3 4 5 6 7 8 local font = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 ) local function on_paint () renderer . text ( \"hello world!\" , font , vec2_t . new ( 20 , 20 ), 50 , color_t . new ( 255 , 255 , 255 , 255 )) renderer . rect_filled ( vec2_t . new ( 30 , 30 ), vec2_t . new ( 40 , 40 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"paint()"},{"location":"callbacks/#unload","text":"Script unload callback 1 2 3 4 5 local function on_unload () -- restore modifed data end client . register_callback ( \"unload\" , on_unload )","title":"unload()"},{"location":"callbacks/#create_movecmd-csgo","text":"Type Name Description usercmd_t cmd Current command CreateMove callback. Can used for command or send packet modification 1 2 3 4 5 6 7 8 9 10 11 12 13 14 local MAX_CHOKE = 14 local function on_create_move ( cmd ) -- pitch down cmd . viewangles . pitch = 90 -- backwards cmd . viewangles . yaw = cmd . viewangles . yaw + 180 -- fakelag cmd . send_packet = clientstate . get_choked_commands () >= MAX_CHOKE end client . register_callback ( \"create_move\" , on_create_move )","title":"create_move(cmd) - csgo"},{"location":"callbacks/#frame_stage_notifystage-csgo","text":"Type Name Description number stage Current stage FrameStageNotify callback. Calls every game stage developer.valvesoftware.com/wiki/Frame_Order 1 2 3 4 5 6 7 8 9 local FRAME_RENDER_START = 5 local function on_frame_stage_notify ( stage ) if stage ~= FRAME_RENDER_START then return end -- run code on frame render start end client . register_callback ( \"frame_stage_notify\" , on_frame_stage_notify )","title":"frame_stage_notify(stage) - csgo"},{"location":"callbacks/#fire_game_eventevent-csgo","text":"Type Name Description game_event_t event Event FireGameEvent callback. Calls on event 1 2 3 4 5 6 7 8 9 se . register_event ( \"round_start\" ) local function on_fire_game_event ( event ) if event : get_name () ~= \"round_start\" then return end client . notify ( \"Round started!\" ) end client . register_callback ( \"fire_game_event\" , on_fire_game_event )","title":"fire_game_event(event) - csgo"},{"location":"callbacks/#shot_firedinfo-csgo","text":"Type Name Description shot_info_t info Shot info ShotFired callback. Calls on shot 1 2 3 4 5 local function on_shot_fired ( info ) client . notify ( \"test\" ) end client . register_callback ( \"shot_fired\" , on_shot_fired )","title":"shot_fired(info) - csgo"},{"location":"client/","text":"client table Functions load_script(scriptname) Type Name Description string scriptname Script name Load the script 1 client . load_script ( \"example.lua\" ) unload_script(scriptname) Type Name Description string scriptname Script name Unload the script 1 client . unload_script ( \"example.lua\" ) register_callback(eventname, fn) Type Name Description string eventname Callback name function fn Lua function() Register the callback 1 2 3 4 5 local function on_create_move ( cmd ) print ( cmd . command_number ) end client . register_callback ( \"create_move\" , on_create_move ) get_username() : string Returns your cheat username 1 local username = client . get_username () notify(text) Type Name Description string text Notification text Pushing notification 1 client . notify ( \"Hello world!\" ) get_time_stamp() : number Returns the unix timestamp 1 local timestamp = client . get_time_stamp () get_system_time() : number, number, number Returns the windows time 1 local hours , minutes , seconds = client . get_system_time () is_key_pressed(key) : bool Type Name Description number key Virtual key code Returns true if key pressed 1 local pressed = client . is_key_pressed ( 1 ) is_key_clicked(key) : bool Type Name Description number key Virtual key code Returns true if key clicked 1 local clicked = client . is_key_clicked ( 1 ) find_pattern(module, pattern) : number Type Name Description string module Module string pattern Pattern Returns pattern address 1 local line_goes_through_smoke_addr = client . find_pattern ( \"client.dll\" , \"55 8B EC 83 EC 08 8B 15 ? ? ? ? 0F 57 C0\" )","title":"client"},{"location":"client/#client-table","text":"","title":"client table"},{"location":"client/#functions","text":"","title":"Functions"},{"location":"client/#load_scriptscriptname","text":"Type Name Description string scriptname Script name Load the script 1 client . load_script ( \"example.lua\" )","title":"load_script(scriptname)"},{"location":"client/#unload_scriptscriptname","text":"Type Name Description string scriptname Script name Unload the script 1 client . unload_script ( \"example.lua\" )","title":"unload_script(scriptname)"},{"location":"client/#register_callbackeventname-fn","text":"Type Name Description string eventname Callback name function fn Lua function() Register the callback 1 2 3 4 5 local function on_create_move ( cmd ) print ( cmd . command_number ) end client . register_callback ( \"create_move\" , on_create_move )","title":"register_callback(eventname, fn)"},{"location":"client/#get_username-string","text":"Returns your cheat username 1 local username = client . get_username ()","title":"get_username(): string"},{"location":"client/#notifytext","text":"Type Name Description string text Notification text Pushing notification 1 client . notify ( \"Hello world!\" )","title":"notify(text)"},{"location":"client/#get_time_stamp-number","text":"Returns the unix timestamp 1 local timestamp = client . get_time_stamp ()","title":"get_time_stamp(): number"},{"location":"client/#get_system_time-number-number-number","text":"Returns the windows time 1 local hours , minutes , seconds = client . get_system_time ()","title":"get_system_time(): number, number, number"},{"location":"client/#is_key_pressedkey-bool","text":"Type Name Description number key Virtual key code Returns true if key pressed 1 local pressed = client . is_key_pressed ( 1 )","title":"is_key_pressed(key): bool"},{"location":"client/#is_key_clickedkey-bool","text":"Type Name Description number key Virtual key code Returns true if key clicked 1 local clicked = client . is_key_clicked ( 1 )","title":"is_key_clicked(key): bool"},{"location":"client/#find_patternmodule-pattern-number","text":"Type Name Description string module Module string pattern Pattern Returns pattern address 1 local line_goes_through_smoke_addr = client . find_pattern ( \"client.dll\" , \"55 8B EC 83 EC 08 8B 15 ? ? ? ? 0F 57 C0\" )","title":"find_pattern(module, pattern): number"},{"location":"renderer/","text":"renderer table Functions setup_font(filename, size, flags) : font Type Name Description string filename Font file path number size Font size in pixels number flags Freetype font flags Creates new font 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 --[[ Freetype font flags: -- By default, hinting is enabled and the font's native hinter is preferred over the auto-hinter. NoHinting = 1 -- Disable hinting. This generally generates 'blurrier' bitmap glyphs when the glyph are rendered in any of the anti-aliased modes. NoAutoHint = 2 -- Disable auto-hinter. ForceAutoHint = 4 -- Indicates that the auto-hinter is preferred over the font's native hinter. LightHinting = 8 -- A lighter hinting algorithm for gray-level modes. Many generated glyphs are fuzzier but better resemble their m_original shape. This is achieved by snapping glyphs to the pixel grid only vertically (Y-axis), as is done by Microsoft's ClearType and Adobe's proprietary font renderer. This preserves inter-glyph spacing in horizontal text. MonoHinting = 16 -- Strong hinting algorithm that should only be used for monochrome output. Bold = 32 -- Styling: Should we artificially embolden the font? Oblique = 64 -- Styling: Should we slant the font, emulating italic style? Monochrome = 128 -- Disable anti-aliasing. Combine this with MonoHinting for best results! ]] local tahoma_bold = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 , 0 ) setup_texture(filename) : texture Type Name Description string filename Texture file path Creates new texture 1 local my_texture = renderer . setup_texture ( \"C:/nixware/example.png\" ) text(text, font, pos, size, color) Type Name Description string text Text font font Font vec2_t pos Text position number size Font size in pixels color_t color Text color Drawing the text 1 2 3 4 5 6 7 local tahoma_bold = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 , 0 ) local function on_paint () renderer . text ( \"hello world!\" , tahoma_bold , vec2_t . new ( 10 , 10 ), 50 , color_t . new ( 255 , 255 , 255 , 255 )) end client . register_callback ( \"paint\" , on_paint ) texture(tex, from, to, color) Type Name Description texture tex Texture vec2_t from Start position vec2_t to End position color_t color Texture color ( default value: color_t.new(255, 255, 255, 255) ) Drawing the texture 1 2 3 4 5 6 7 local my_texture = renderer . setup_texture ( \"C:/nixware/example.png\" ) local function on_paint () renderer . texture ( my_texture , vec2_t . new ( 0 , 0 ), vec2_t . new ( 500 , 500 ), color_t . new ( 255 , 255 , 255 , 255 )) end client . register_callback ( \"paint\" , on_paint ) get_text_size(font, size, text) : vec2_t Type Name Description number font Font number size Font size string text Text Returns the text size 1 2 3 4 5 6 7 local tahoma_bold = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 , 0 ) local function on_paint () local hello_world_size = renderer . get_text_size ( tahoma_bold , 50 , \"hello world!\" ) end client . register_callback ( \"paint\" , on_paint ) get_cursor_pos() : vec2_t Returns the cursor position 1 2 3 4 5 local function on_paint () local mouse_pos = renderer . get_cursor_pos () end client . register_callback ( \"paint\" , on_paint ) line(from, to, color) Type Name Description vec2_t from Start position vec2_t to End position color_t color Color Drawing the line 1 2 3 4 5 local function on_paint () renderer . line ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint ) rect(from, to, color) Type Name Description vec2_t from Start position vec2_t to End position color_t color Color Drawing the rect 1 2 3 4 5 local function on_paint () renderer . rect ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint ) rect_filled(from, to, color) Type Name Description vec2_t from Start position vec2_t to End position color_t color Rect color Drawing the filled rect 1 2 3 4 5 local function on_paint () renderer . rect_filled ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint ) rect_filled_fade(from, to, col_upr_left, col_upr_right, col_bot_right, col_bot_left) Type Name Description vec2_t from Start position vec2_t to End position color_t col_upr_left Upper left color color_t col_upr_right Upper right color color_t col_bot_right Bottom right color color_t col_bot_left Bottom left color Drawing the faded rect 1 2 3 4 5 local function on_paint () renderer . rect_filled_fade ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 ), color_t . new ( 255 , 0 , 0 , 255 ), color_t . new ( 0 , 0 , 0 , 255 ), color_t . new ( 0 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint ) circle(pos, radius, segments, filled, color) Type Name Description vec2_t pos Start position number radius Circle radius number segments Circle segments bool filled Filled circle color_t color Circle color Drawing the circle 1 2 3 4 5 local function on_paint () renderer . circle ( vec2_t . new ( 100 , 100 ), 50 , 50 , false , color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint ) filled_polygon(points, color) Type Name Description vec2_t array points Points color_t color Color Drawing the textured polygon 1 2 3 4 5 6 7 local function on_paint () -- trigon local points = { vec2_t . new ( 5 , 5 ), vec2_t . new ( 15 , 5 ), vec2_t . new ( 10 , 15 ) } renderer . filled_polygon ( points , color_t . new ( 255 , 255 , 255 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"renderer"},{"location":"renderer/#renderer-table","text":"","title":"renderer table"},{"location":"renderer/#functions","text":"","title":"Functions"},{"location":"renderer/#setup_fontfilename-size-flags-font","text":"Type Name Description string filename Font file path number size Font size in pixels number flags Freetype font flags Creates new font 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 --[[ Freetype font flags: -- By default, hinting is enabled and the font's native hinter is preferred over the auto-hinter. NoHinting = 1 -- Disable hinting. This generally generates 'blurrier' bitmap glyphs when the glyph are rendered in any of the anti-aliased modes. NoAutoHint = 2 -- Disable auto-hinter. ForceAutoHint = 4 -- Indicates that the auto-hinter is preferred over the font's native hinter. LightHinting = 8 -- A lighter hinting algorithm for gray-level modes. Many generated glyphs are fuzzier but better resemble their m_original shape. This is achieved by snapping glyphs to the pixel grid only vertically (Y-axis), as is done by Microsoft's ClearType and Adobe's proprietary font renderer. This preserves inter-glyph spacing in horizontal text. MonoHinting = 16 -- Strong hinting algorithm that should only be used for monochrome output. Bold = 32 -- Styling: Should we artificially embolden the font? Oblique = 64 -- Styling: Should we slant the font, emulating italic style? Monochrome = 128 -- Disable anti-aliasing. Combine this with MonoHinting for best results! ]] local tahoma_bold = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 , 0 )","title":"setup_font(filename, size, flags): font"},{"location":"renderer/#setup_texturefilename-texture","text":"Type Name Description string filename Texture file path Creates new texture 1 local my_texture = renderer . setup_texture ( \"C:/nixware/example.png\" )","title":"setup_texture(filename): texture"},{"location":"renderer/#texttext-font-pos-size-color","text":"Type Name Description string text Text font font Font vec2_t pos Text position number size Font size in pixels color_t color Text color Drawing the text 1 2 3 4 5 6 7 local tahoma_bold = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 , 0 ) local function on_paint () renderer . text ( \"hello world!\" , tahoma_bold , vec2_t . new ( 10 , 10 ), 50 , color_t . new ( 255 , 255 , 255 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"text(text, font, pos, size, color)"},{"location":"renderer/#texturetex-from-to-color","text":"Type Name Description texture tex Texture vec2_t from Start position vec2_t to End position color_t color Texture color ( default value: color_t.new(255, 255, 255, 255) ) Drawing the texture 1 2 3 4 5 6 7 local my_texture = renderer . setup_texture ( \"C:/nixware/example.png\" ) local function on_paint () renderer . texture ( my_texture , vec2_t . new ( 0 , 0 ), vec2_t . new ( 500 , 500 ), color_t . new ( 255 , 255 , 255 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"texture(tex, from, to, color)"},{"location":"renderer/#get_text_sizefont-size-text-vec2_t","text":"Type Name Description number font Font number size Font size string text Text Returns the text size 1 2 3 4 5 6 7 local tahoma_bold = renderer . setup_font ( \"C:/windows/fonts/tahomabd.ttf\" , 50 , 0 ) local function on_paint () local hello_world_size = renderer . get_text_size ( tahoma_bold , 50 , \"hello world!\" ) end client . register_callback ( \"paint\" , on_paint )","title":"get_text_size(font, size, text): vec2_t"},{"location":"renderer/#get_cursor_pos-vec2_t","text":"Returns the cursor position 1 2 3 4 5 local function on_paint () local mouse_pos = renderer . get_cursor_pos () end client . register_callback ( \"paint\" , on_paint )","title":"get_cursor_pos(): vec2_t"},{"location":"renderer/#linefrom-to-color","text":"Type Name Description vec2_t from Start position vec2_t to End position color_t color Color Drawing the line 1 2 3 4 5 local function on_paint () renderer . line ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"line(from, to, color)"},{"location":"renderer/#rectfrom-to-color","text":"Type Name Description vec2_t from Start position vec2_t to End position color_t color Color Drawing the rect 1 2 3 4 5 local function on_paint () renderer . rect ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"rect(from, to, color)"},{"location":"renderer/#rect_filledfrom-to-color","text":"Type Name Description vec2_t from Start position vec2_t to End position color_t color Rect color Drawing the filled rect 1 2 3 4 5 local function on_paint () renderer . rect_filled ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"rect_filled(from, to, color)"},{"location":"renderer/#rect_filled_fadefrom-to-col_upr_left-col_upr_right-col_bot_right-col_bot_left","text":"Type Name Description vec2_t from Start position vec2_t to End position color_t col_upr_left Upper left color color_t col_upr_right Upper right color color_t col_bot_right Bottom right color color_t col_bot_left Bottom left color Drawing the faded rect 1 2 3 4 5 local function on_paint () renderer . rect_filled_fade ( vec2_t . new ( 5 , 5 ), vec2_t . new ( 20 , 20 ), color_t . new ( 255 , 0 , 0 , 255 ), color_t . new ( 255 , 0 , 0 , 255 ), color_t . new ( 0 , 0 , 0 , 255 ), color_t . new ( 0 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"rect_filled_fade(from, to, col_upr_left, col_upr_right, col_bot_right, col_bot_left)"},{"location":"renderer/#circlepos-radius-segments-filled-color","text":"Type Name Description vec2_t pos Start position number radius Circle radius number segments Circle segments bool filled Filled circle color_t color Circle color Drawing the circle 1 2 3 4 5 local function on_paint () renderer . circle ( vec2_t . new ( 100 , 100 ), 50 , 50 , false , color_t . new ( 255 , 0 , 0 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"circle(pos, radius, segments, filled, color)"},{"location":"renderer/#filled_polygonpoints-color","text":"Type Name Description vec2_t array points Points color_t color Color Drawing the textured polygon 1 2 3 4 5 6 7 local function on_paint () -- trigon local points = { vec2_t . new ( 5 , 5 ), vec2_t . new ( 15 , 5 ), vec2_t . new ( 10 , 15 ) } renderer . filled_polygon ( points , color_t . new ( 255 , 255 , 255 , 255 )) end client . register_callback ( \"paint\" , on_paint )","title":"filled_polygon(points, color)"},{"location":"ui/","text":"ui table Info Elements added from script automaticly saves in config. You can find actual variables list in default.cfg. Functions add_checkbox(label, var_name, def_value) Type Name Description string label Checkbox label string var_name Variable name in config bool def_value Default value Creates checkbox in menu 1 ui . add_checkbox ( \"lua checkbox\" , \"lua_boolean\" , false ) add_slider_int(label, var_name, min, max, def_value) Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates int slider in menu 1 ui . add_slider_int ( \"lua int slider\" , \"lua_integer\" , 0 , 100 , 50 ) add_combo(label, var_name, items, def_value) Type Name Description string label Combobox label string var_name Variable name in config string array items Combobox items number def_value Default value Creates combo box in menu 1 ui . add_combo ( \"lua combo\" , \"lua_integer\" , { \"item1\" , \"item2\" , \"item3\" }, 0 ) add_slider_float(label, var_name, min, max, def_value) Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates float slider in menu 1 ui . add_slider_float ( \"lua float slider\" , \"lua_float\" , 0.0 , 1.0 , 0.3 ) add_keybind(label, var_name, def_key, def_mode) Type Name Description string label Keybind label string var_name Variable name in config number def_key Default key number def_mode Default mode Creates key bind in menu 1 ui . add_keybind ( \"lua key bind\" , \"lua_keybind\" , 0 , 0 ) add_color_edit(label, var_name, show_alpha, def_color) Type Name Description string label Coloredit label string var_name Variable name in config bool show_alpha Enables the alpha modifer color def_color Default color Creates color edit in menu 1 ui . add_color_edit ( \"lua coloredit\" , \"lua_color\" , true , color_t . new ( 255 , 255 , 255 , 255 )) get_bool(var_name) : bool Type Name Description string var_name Variable name in config Returns the value from checkbox 1 local value = ui . get_bool ( \"legit_enable\" ) get_int(var_name) : number Type Name Description string var_name Variable name in config Returns the value from int slider 1 local value = ui . get_int ( \"visuals_other_nightmode\" ) get_float(var_name) : number Type Name Description string var_name Variable name in config Returns the value from float slider 1 local value = ui . get_float ( \"skins_aspect_ratio\" ) get_color(var_name) : color_t Type Name Description string var_name Variable name in config Returns the value from color edit 1 local value = ui . get_color ( \"misc_ui_color\" ) set_bool(var_name, val) Type Name Description string var_name Variable name in config bool val Value Setting checkbox value 1 ui . set_bool ( \"legit_enable\" , false ) set_int(var_name, val) Type Name Description string var_name Variable name in config number val Value Setting int slider value 1 ui . set_int ( \"visuals_other_nightmode\" , 0 ) set_float(var_name, val) Type Name Description string var_name Variable name in config number val Value Setting float slider value 1 ui . set_float ( \"skins_aspect_ratio\" , 1.333 ) set_color(var_name, val) Type Name Description string var_name Variable name in config color_t val Value Setting coloredit value 1 ui . set_color ( \"misc_ui_color\" , color_t . new ( 0 , 255 , 0 , 255 )) get_bind_state() : bool Returns the bind state 1 local bind_active = ui . get_bind_state ( \"legit_autofire_bind\" ) is_visible() : bool Returns true if menu opened 1 local is_menu_opened = ui . is_visible () set_visible(value) Type Name Description bool value Set menu visible or not Setting menu visibility 1 2 -- close menu ui . set_visible ( false )","title":"ui"},{"location":"ui/#ui-table","text":"Info Elements added from script automaticly saves in config. You can find actual variables list in default.cfg.","title":"ui table"},{"location":"ui/#functions","text":"","title":"Functions"},{"location":"ui/#add_checkboxlabel-var_name-def_value","text":"Type Name Description string label Checkbox label string var_name Variable name in config bool def_value Default value Creates checkbox in menu 1 ui . add_checkbox ( \"lua checkbox\" , \"lua_boolean\" , false )","title":"add_checkbox(label, var_name, def_value)"},{"location":"ui/#add_slider_intlabel-var_name-min-max-def_value","text":"Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates int slider in menu 1 ui . add_slider_int ( \"lua int slider\" , \"lua_integer\" , 0 , 100 , 50 )","title":"add_slider_int(label, var_name, min, max, def_value)"},{"location":"ui/#add_combolabel-var_name-items-def_value","text":"Type Name Description string label Combobox label string var_name Variable name in config string array items Combobox items number def_value Default value Creates combo box in menu 1 ui . add_combo ( \"lua combo\" , \"lua_integer\" , { \"item1\" , \"item2\" , \"item3\" }, 0 )","title":"add_combo(label, var_name, items, def_value)"},{"location":"ui/#add_slider_floatlabel-var_name-min-max-def_value","text":"Type Name Description string label Slider label string var_name Variable name in config number min Min value number max Max value number def_value Default value Creates float slider in menu 1 ui . add_slider_float ( \"lua float slider\" , \"lua_float\" , 0.0 , 1.0 , 0.3 )","title":"add_slider_float(label, var_name, min, max, def_value)"},{"location":"ui/#add_keybindlabel-var_name-def_key-def_mode","text":"Type Name Description string label Keybind label string var_name Variable name in config number def_key Default key number def_mode Default mode Creates key bind in menu 1 ui . add_keybind ( \"lua key bind\" , \"lua_keybind\" , 0 , 0 )","title":"add_keybind(label, var_name, def_key, def_mode)"},{"location":"ui/#add_color_editlabel-var_name-show_alpha-def_color","text":"Type Name Description string label Coloredit label string var_name Variable name in config bool show_alpha Enables the alpha modifer color def_color Default color Creates color edit in menu 1 ui . add_color_edit ( \"lua coloredit\" , \"lua_color\" , true , color_t . new ( 255 , 255 , 255 , 255 ))","title":"add_color_edit(label, var_name, show_alpha, def_color)"},{"location":"ui/#get_boolvar_name-bool","text":"Type Name Description string var_name Variable name in config Returns the value from checkbox 1 local value = ui . get_bool ( \"legit_enable\" )","title":"get_bool(var_name): bool"},{"location":"ui/#get_intvar_name-number","text":"Type Name Description string var_name Variable name in config Returns the value from int slider 1 local value = ui . get_int ( \"visuals_other_nightmode\" )","title":"get_int(var_name): number"},{"location":"ui/#get_floatvar_name-number","text":"Type Name Description string var_name Variable name in config Returns the value from float slider 1 local value = ui . get_float ( \"skins_aspect_ratio\" )","title":"get_float(var_name): number"},{"location":"ui/#get_colorvar_name-color_t","text":"Type Name Description string var_name Variable name in config Returns the value from color edit 1 local value = ui . get_color ( \"misc_ui_color\" )","title":"get_color(var_name): color_t"},{"location":"ui/#set_boolvar_name-val","text":"Type Name Description string var_name Variable name in config bool val Value Setting checkbox value 1 ui . set_bool ( \"legit_enable\" , false )","title":"set_bool(var_name, val)"},{"location":"ui/#set_intvar_name-val","text":"Type Name Description string var_name Variable name in config number val Value Setting int slider value 1 ui . set_int ( \"visuals_other_nightmode\" , 0 )","title":"set_int(var_name, val)"},{"location":"ui/#set_floatvar_name-val","text":"Type Name Description string var_name Variable name in config number val Value Setting float slider value 1 ui . set_float ( \"skins_aspect_ratio\" , 1.333 )","title":"set_float(var_name, val)"},{"location":"ui/#set_colorvar_name-val","text":"Type Name Description string var_name Variable name in config color_t val Value Setting coloredit value 1 ui . set_color ( \"misc_ui_color\" , color_t . new ( 0 , 255 , 0 , 255 ))","title":"set_color(var_name, val)"},{"location":"ui/#get_bind_state-bool","text":"Returns the bind state 1 local bind_active = ui . get_bind_state ( \"legit_autofire_bind\" )","title":"get_bind_state(): bool"},{"location":"ui/#is_visible-bool","text":"Returns true if menu opened 1 local is_menu_opened = ui . is_visible ()","title":"is_visible(): bool"},{"location":"ui/#set_visiblevalue","text":"Type Name Description bool value Set menu visible or not Setting menu visibility 1 2 -- close menu ui . set_visible ( false )","title":"set_visible(value)"},{"location":"sourceengine/clientstate/","text":"clientstate table Functions get_choked_commands() : number Returns the number of choked commands 1 local choked = clientstate . get_choked_commands () force_full_update() Forcing cl_fullupdate 1 clientstate . force_full_update ()","title":"clientstate"},{"location":"sourceengine/clientstate/#clientstate-table","text":"","title":"clientstate table"},{"location":"sourceengine/clientstate/#functions","text":"","title":"Functions"},{"location":"sourceengine/clientstate/#get_choked_commands-number","text":"Returns the number of choked commands 1 local choked = clientstate . get_choked_commands ()","title":"get_choked_commands(): number"},{"location":"sourceengine/clientstate/#force_full_update","text":"Forcing cl_fullupdate 1 clientstate . force_full_update ()","title":"force_full_update()"},{"location":"sourceengine/engine/","text":"engine table Functions get_screen_size() : vec2_t Returns the screen size 1 local screen_size = engine . get_screen_size () is_connected() : bool Returns true if connected to server 1 local is_connected = engine . is_connected () is_in_game() : bool Returns true if in game 1 local is_in_game = engine . is_in_game () get_local_player() : number Returns the local player index 1 local lp_index = engine . get_local_player () get_player_info(index) : player_info_t Type Name Description number index Entity index Returns the player_info_t object 1 local local_info = engine . get_player_info ( engine . get_local_player ()) get_level_name_short() : string Returns current level name (example: de_mirage) 1 local current_map = engine . get_level_name_short () get_player_for_user_id(userid) : number Type Name Description number userid User ID Returns the player index from user id 1 local ent_idx = engine . get_player_for_user_id ( userid ) set_view_angles(viewangles) Type Name Description angle_t viewangles Viewangles Setting the viewangles 1 engine . set_view_angles ( angle_t . new ( 0 , 0 , 0 )) get_view_angles() : angle_t Returns the camera angles 1 local view_ang = engine . get_view_angles () execute_client_cmd(cmd) Type Name Description string cmd Console command Executes command in console 1 engine . execute_client_cmd ( \"clear\" )","title":"engine"},{"location":"sourceengine/engine/#engine-table","text":"","title":"engine table"},{"location":"sourceengine/engine/#functions","text":"","title":"Functions"},{"location":"sourceengine/engine/#get_screen_size-vec2_t","text":"Returns the screen size 1 local screen_size = engine . get_screen_size ()","title":"get_screen_size(): vec2_t"},{"location":"sourceengine/engine/#is_connected-bool","text":"Returns true if connected to server 1 local is_connected = engine . is_connected ()","title":"is_connected(): bool"},{"location":"sourceengine/engine/#is_in_game-bool","text":"Returns true if in game 1 local is_in_game = engine . is_in_game ()","title":"is_in_game(): bool"},{"location":"sourceengine/engine/#get_local_player-number","text":"Returns the local player index 1 local lp_index = engine . get_local_player ()","title":"get_local_player(): number"},{"location":"sourceengine/engine/#get_player_infoindex-player_info_t","text":"Type Name Description number index Entity index Returns the player_info_t object 1 local local_info = engine . get_player_info ( engine . get_local_player ())","title":"get_player_info(index): player_info_t"},{"location":"sourceengine/engine/#get_level_name_short-string","text":"Returns current level name (example: de_mirage) 1 local current_map = engine . get_level_name_short ()","title":"get_level_name_short(): string"},{"location":"sourceengine/engine/#get_player_for_user_iduserid-number","text":"Type Name Description number userid User ID Returns the player index from user id 1 local ent_idx = engine . get_player_for_user_id ( userid )","title":"get_player_for_user_id(userid): number"},{"location":"sourceengine/engine/#set_view_anglesviewangles","text":"Type Name Description angle_t viewangles Viewangles Setting the viewangles 1 engine . set_view_angles ( angle_t . new ( 0 , 0 , 0 ))","title":"set_view_angles(viewangles)"},{"location":"sourceengine/engine/#get_view_angles-angle_t","text":"Returns the camera angles 1 local view_ang = engine . get_view_angles ()","title":"get_view_angles(): angle_t"},{"location":"sourceengine/engine/#execute_client_cmdcmd","text":"Type Name Description string cmd Console command Executes command in console 1 engine . execute_client_cmd ( \"clear\" )","title":"execute_client_cmd(cmd)"},{"location":"sourceengine/entitylist/","text":"entitylist table Functions get_highest_entity_index() : number Returns the highest entity index 1 local idx = entitylist . get_highest_entity_index () get_local_player() : entity_t Returns the local player object 1 local localplayer = entitylist . get_local_player () get_entity_by_index(index) : entity_t Type Name Description number index Entity index Returns the entity_t object by index 1 local lp = entitylist . get_entity_by_index ( entitylist . get_local_player ()) get_entity_from_handle(handle) : entity_t Type Name Description number handle Entity handle Returns the entity_t object by handle 1 2 3 4 5 local m_hActiveWeapon = se . get_netvar ( \"DT_BaseCombatCharacter\" , \"m_hActiveWeapon\" ) -- getting local weapon local active_weapon_handle = local_player : get_prop_int ( m_hActiveWeapon ) local active_weapon = entitylist . get_entity_from_handle ( active_weapon_handle ) get_players(type) : entity_t array Type Name Description number type Type Returns the players array 0 - enemies only 1 - teammates only 2 - all players 1 2 3 4 local players = entitylist . get_players ( 0 ) for i = 1 , # players do local player = players [ i ] end get_entities_by_class(classname) : entity_t array Type Name Description string classname Class name Returns the entities array by class name 1 local entities = entitylist . get_entities_by_class ( \"CFogController\" ) get_entities_by_class_id(classid) : entity_t array Type Name Description number classid Class id Returns the entities array by class id 1 local entities = entitylist . get_entities_by_class_id ( 78 )","title":"entitylist"},{"location":"sourceengine/entitylist/#entitylist-table","text":"","title":"entitylist table"},{"location":"sourceengine/entitylist/#functions","text":"","title":"Functions"},{"location":"sourceengine/entitylist/#get_highest_entity_index-number","text":"Returns the highest entity index 1 local idx = entitylist . get_highest_entity_index ()","title":"get_highest_entity_index(): number"},{"location":"sourceengine/entitylist/#get_local_player-entity_t","text":"Returns the local player object 1 local localplayer = entitylist . get_local_player ()","title":"get_local_player(): entity_t"},{"location":"sourceengine/entitylist/#get_entity_by_indexindex-entity_t","text":"Type Name Description number index Entity index Returns the entity_t object by index 1 local lp = entitylist . get_entity_by_index ( entitylist . get_local_player ())","title":"get_entity_by_index(index): entity_t"},{"location":"sourceengine/entitylist/#get_entity_from_handlehandle-entity_t","text":"Type Name Description number handle Entity handle Returns the entity_t object by handle 1 2 3 4 5 local m_hActiveWeapon = se . get_netvar ( \"DT_BaseCombatCharacter\" , \"m_hActiveWeapon\" ) -- getting local weapon local active_weapon_handle = local_player : get_prop_int ( m_hActiveWeapon ) local active_weapon = entitylist . get_entity_from_handle ( active_weapon_handle )","title":"get_entity_from_handle(handle): entity_t"},{"location":"sourceengine/entitylist/#get_playerstype-entity_t-array","text":"Type Name Description number type Type Returns the players array 0 - enemies only 1 - teammates only 2 - all players 1 2 3 4 local players = entitylist . get_players ( 0 ) for i = 1 , # players do local player = players [ i ] end","title":"get_players(type): entity_t array"},{"location":"sourceengine/entitylist/#get_entities_by_classclassname-entity_t-array","text":"Type Name Description string classname Class name Returns the entities array by class name 1 local entities = entitylist . get_entities_by_class ( \"CFogController\" )","title":"get_entities_by_class(classname): entity_t array"},{"location":"sourceengine/entitylist/#get_entities_by_class_idclassid-entity_t-array","text":"Type Name Description number classid Class id Returns the entities array by class id 1 local entities = entitylist . get_entities_by_class_id ( 78 )","title":"get_entities_by_class_id(classid): entity_t array"},{"location":"sourceengine/globalvars/","text":"globalvars table Functions get_real_time() : number Returns the client time 1 local rt = globalvars . get_real_time () get_frame_count() : number Returns the frame count 1 local frame_count = globalvars . frame_count () get_absolute_frametime() : number Returns the absolute frame time 1 local absolute_frametime = globalvars . get_absolute_frametime () get_current_time() : number Returns the server time 1 local current_time = globalvars . get_current_time () get_frame_time() : number Returns the frame time 1 local frame_time = globalvars . get_frame_time () get_max_clients() : number Returns the max clients value 1 local max_clients = globalvars . get_max_clients () get_tick_count() : number Returns the current tickcount 1 local tick_count = globalvars . get_tick_count () get_interval_per_tick() : number Returns the interval per tick 1 local tick_count = globalvars . get_interval_per_tick ()","title":"globalvars"},{"location":"sourceengine/globalvars/#globalvars-table","text":"","title":"globalvars table"},{"location":"sourceengine/globalvars/#functions","text":"","title":"Functions"},{"location":"sourceengine/globalvars/#get_real_time-number","text":"Returns the client time 1 local rt = globalvars . get_real_time ()","title":"get_real_time(): number"},{"location":"sourceengine/globalvars/#get_frame_count-number","text":"Returns the frame count 1 local frame_count = globalvars . frame_count ()","title":"get_frame_count(): number"},{"location":"sourceengine/globalvars/#get_absolute_frametime-number","text":"Returns the absolute frame time 1 local absolute_frametime = globalvars . get_absolute_frametime ()","title":"get_absolute_frametime(): number"},{"location":"sourceengine/globalvars/#get_current_time-number","text":"Returns the server time 1 local current_time = globalvars . get_current_time ()","title":"get_current_time(): number"},{"location":"sourceengine/globalvars/#get_frame_time-number","text":"Returns the frame time 1 local frame_time = globalvars . get_frame_time ()","title":"get_frame_time(): number"},{"location":"sourceengine/globalvars/#get_max_clients-number","text":"Returns the max clients value 1 local max_clients = globalvars . get_max_clients ()","title":"get_max_clients(): number"},{"location":"sourceengine/globalvars/#get_tick_count-number","text":"Returns the current tickcount 1 local tick_count = globalvars . get_tick_count ()","title":"get_tick_count(): number"},{"location":"sourceengine/globalvars/#get_interval_per_tick-number","text":"Returns the interval per tick 1 local tick_count = globalvars . get_interval_per_tick ()","title":"get_interval_per_tick(): number"},{"location":"sourceengine/ragebot/","text":"ragebot table - csgo Info All functions from this table should be called from \"create_move\" callback. Functions ignore_player(index) Type Name Description number index Entity index Disable ragebot on this player 1 2 local entity_index = player : get_index () ragebot . ignore_player ( entity_index ) override_wall_penetration(index, penetrate) Type Name Description number index Entity index bool penetrate Enables wall penetration on player Overrides wall penetration on player 1 2 local entity_index = player : get_index () ragebot . override_wall_penetration ( entity_index , false ) -- disable autowall on this player override_desync_correction(index, correct) Type Name Description number index Entity index bool correct Enables resolver on player Overrides desync correction on player 1 2 local entity_index = player : get_index () ragebot . override_desync_correction ( entity_index , false ) -- disable resolver on this player override_hitscan(index, hitbox, scan) Type Name Description number index Entity index number hitbox Hitbox bool scan Enables scan this hitbox Overrides hitscan on player 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 local SCAN_HEAD = 0 local SCAN_CHEST = 1 local SCAN_PELVIS = 2 local SCAN_STOMACH = 3 local SCAN_LEGS = 4 local SCAN_FOOT = 5 -- force head local entity_index = player : get_index () ragebot . override_hitscan ( entity_index , SCAN_HEAD , true ) ragebot . override_hitscan ( entity_index , SCAN_CHEST , false ) ragebot . override_hitscan ( entity_index , SCAN_PELVIS , false ) ragebot . override_hitscan ( entity_index , SCAN_STOMACH , false ) ragebot . override_hitscan ( entity_index , SCAN_LEGS , false ) ragebot . override_hitscan ( entity_index , SCAN_FOOT , false ) override_min_damage(index, damage) Type Name Description number index Entity index number damage Min damage Overrides min damage on player 1 2 local entity_index = player : get_index () ragebot . override_min_damage ( entity_index , 10 ) override_safe_point(index, mode) Type Name Description number index Entity index number mode Safepoint mode Overrides safepoint mode on player 0 - default 1 - prefer 2 - force 1 2 local entity_index = player : get_index () ragebot . override_safe_point ( entity_index , 2 ) -- force safepoints override_max_misses(index, misses) Type Name Description number index Entity index number misses Max misses Overrides max misses on player 1 2 local entity_index = player : get_index () ragebot . override_max_misses ( entity_index , 0 ) override_head_scale(index, scale) Type Name Description number index Entity index number scale Head pointscale Overrides head point scale on player 1 2 local entity_index = player : get_index () ragebot . override_head_scale ( entity_index , 50 ) override_body_scale(index, scale) Type Name Description number index Entity index number scale Bofy pointscale Overrides body point scale on player 1 2 local entity_index = player : get_index () ragebot . override_body_scale ( entity_index , 50 )","title":"ragebot - csgo"},{"location":"sourceengine/ragebot/#ragebot-table-csgo","text":"Info All functions from this table should be called from \"create_move\" callback.","title":"ragebot table - csgo"},{"location":"sourceengine/ragebot/#functions","text":"","title":"Functions"},{"location":"sourceengine/ragebot/#ignore_playerindex","text":"Type Name Description number index Entity index Disable ragebot on this player 1 2 local entity_index = player : get_index () ragebot . ignore_player ( entity_index )","title":"ignore_player(index)"},{"location":"sourceengine/ragebot/#override_wall_penetrationindex-penetrate","text":"Type Name Description number index Entity index bool penetrate Enables wall penetration on player Overrides wall penetration on player 1 2 local entity_index = player : get_index () ragebot . override_wall_penetration ( entity_index , false ) -- disable autowall on this player","title":"override_wall_penetration(index, penetrate)"},{"location":"sourceengine/ragebot/#override_desync_correctionindex-correct","text":"Type Name Description number index Entity index bool correct Enables resolver on player Overrides desync correction on player 1 2 local entity_index = player : get_index () ragebot . override_desync_correction ( entity_index , false ) -- disable resolver on this player","title":"override_desync_correction(index, correct)"},{"location":"sourceengine/ragebot/#override_hitscanindex-hitbox-scan","text":"Type Name Description number index Entity index number hitbox Hitbox bool scan Enables scan this hitbox Overrides hitscan on player 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 local SCAN_HEAD = 0 local SCAN_CHEST = 1 local SCAN_PELVIS = 2 local SCAN_STOMACH = 3 local SCAN_LEGS = 4 local SCAN_FOOT = 5 -- force head local entity_index = player : get_index () ragebot . override_hitscan ( entity_index , SCAN_HEAD , true ) ragebot . override_hitscan ( entity_index , SCAN_CHEST , false ) ragebot . override_hitscan ( entity_index , SCAN_PELVIS , false ) ragebot . override_hitscan ( entity_index , SCAN_STOMACH , false ) ragebot . override_hitscan ( entity_index , SCAN_LEGS , false ) ragebot . override_hitscan ( entity_index , SCAN_FOOT , false )","title":"override_hitscan(index, hitbox, scan)"},{"location":"sourceengine/ragebot/#override_min_damageindex-damage","text":"Type Name Description number index Entity index number damage Min damage Overrides min damage on player 1 2 local entity_index = player : get_index () ragebot . override_min_damage ( entity_index , 10 )","title":"override_min_damage(index, damage)"},{"location":"sourceengine/ragebot/#override_safe_pointindex-mode","text":"Type Name Description number index Entity index number mode Safepoint mode Overrides safepoint mode on player 0 - default 1 - prefer 2 - force 1 2 local entity_index = player : get_index () ragebot . override_safe_point ( entity_index , 2 ) -- force safepoints","title":"override_safe_point(index, mode)"},{"location":"sourceengine/ragebot/#override_max_missesindex-misses","text":"Type Name Description number index Entity index number misses Max misses Overrides max misses on player 1 2 local entity_index = player : get_index () ragebot . override_max_misses ( entity_index , 0 )","title":"override_max_misses(index, misses)"},{"location":"sourceengine/ragebot/#override_head_scaleindex-scale","text":"Type Name Description number index Entity index number scale Head pointscale Overrides head point scale on player 1 2 local entity_index = player : get_index () ragebot . override_head_scale ( entity_index , 50 )","title":"override_head_scale(index, scale)"},{"location":"sourceengine/ragebot/#override_body_scaleindex-scale","text":"Type Name Description number index Entity index number scale Bofy pointscale Overrides body point scale on player 1 2 local entity_index = player : get_index () ragebot . override_body_scale ( entity_index , 50 )","title":"override_body_scale(index, scale)"},{"location":"sourceengine/se/","text":"se table (source engine utilities) Functions world_to_screen(pos) : vec2_t Type Name Description vec3_t pos World position Calculates on screen position from world pos 1 local pos2d = se . world_to_screen ( pos ) set_clantag(tag) Type Name Description string tag Wanted clantag Setting the clantag 1 se . set_clantag ( \"nixware.cc\" ) set_name(name) Type Name Description string name Wanted name Setting the name 1 se . set_name ( \"nixware.cc\" ) get_convar(name) : convar_t Type Name Description string name Console variable name Returns convar_t object 1 se . get_convar ( \"r_jigglebones\" ) get_netvar(table, netvar) : number Type Name Description string table Table name string netvar Netvar name Returns the netvar offset 1 se . get_netvar ( \"DT_BasePlayer\" , \"m_iHealth\" ) get_latency() : number Returns current latency 1 local ping = se . get_latency () register_event(eventname) Type Name Description string eventname Event name Register the event for fire_game_event callback 1 se . register_event ( \"player_death\" ) create_interface(module_name, interface_version) : number Type Name Description string module_name Module name string interface_version Interface version Returns the interface address 1 local g_model_info = se . create_interface ( \"engine.dll\" , \"VModelInfoClient004\" )","title":"se"},{"location":"sourceengine/se/#se-table-source-engine-utilities","text":"","title":"se table (source engine utilities)"},{"location":"sourceengine/se/#functions","text":"","title":"Functions"},{"location":"sourceengine/se/#world_to_screenpos-vec2_t","text":"Type Name Description vec3_t pos World position Calculates on screen position from world pos 1 local pos2d = se . world_to_screen ( pos )","title":"world_to_screen(pos): vec2_t"},{"location":"sourceengine/se/#set_clantagtag","text":"Type Name Description string tag Wanted clantag Setting the clantag 1 se . set_clantag ( \"nixware.cc\" )","title":"set_clantag(tag)"},{"location":"sourceengine/se/#set_namename","text":"Type Name Description string name Wanted name Setting the name 1 se . set_name ( \"nixware.cc\" )","title":"set_name(name)"},{"location":"sourceengine/se/#get_convarname-convar_t","text":"Type Name Description string name Console variable name Returns convar_t object 1 se . get_convar ( \"r_jigglebones\" )","title":"get_convar(name): convar_t"},{"location":"sourceengine/se/#get_netvartable-netvar-number","text":"Type Name Description string table Table name string netvar Netvar name Returns the netvar offset 1 se . get_netvar ( \"DT_BasePlayer\" , \"m_iHealth\" )","title":"get_netvar(table, netvar): number"},{"location":"sourceengine/se/#get_latency-number","text":"Returns current latency 1 local ping = se . get_latency ()","title":"get_latency(): number"},{"location":"sourceengine/se/#register_eventeventname","text":"Type Name Description string eventname Event name Register the event for fire_game_event callback 1 se . register_event ( \"player_death\" )","title":"register_event(eventname)"},{"location":"sourceengine/se/#create_interfacemodule_name-interface_version-number","text":"Type Name Description string module_name Module name string interface_version Interface version Returns the interface address 1 local g_model_info = se . create_interface ( \"engine.dll\" , \"VModelInfoClient004\" )","title":"create_interface(module_name, interface_version): number"},{"location":"sourceengine/trace/","text":"trace table Functions line(skip_entindex, mask, start, end) : number, number Type Name Description number skip_entindex Skip entity index number mask Trace mask vec3_t start Start trace position vec3_t end End trace position Tracing 1 local fraction , hit_entity_index = trace . line ( engine . get_local_player (), mask , start , end )","title":"trace"},{"location":"sourceengine/trace/#trace-table","text":"","title":"trace table"},{"location":"sourceengine/trace/#functions","text":"","title":"Functions"},{"location":"sourceengine/trace/#lineskip_entindex-mask-start-end-number-number","text":"Type Name Description number skip_entindex Skip entity index number mask Trace mask vec3_t start Start trace position vec3_t end End trace position Tracing 1 local fraction , hit_entity_index = trace . line ( engine . get_local_player (), mask , start , end )","title":"line(skip_entindex, mask, start, end): number, number"},{"location":"sourceengine/types/convar_t/","text":"convar_t Functions get_int() : number Returns the int value 1 2 local convar = se . get_convar ( \"r_jiggle_bones\" ) local value = convar : get_int () get_float() : number Returns the float value 1 2 local convar = se . get_convar ( \"r_aspectratio\" ) local value = convar : get_float () get_string() : string Returns the string 1 2 local convar = se . get_convar ( \"sv_skyname\" ) local str = convar : get_string () set_int(value) Type Name number value Setting the int value 1 2 local convar = se . get_convar ( \"r_jigglebones\" ) convar : set_int ( 0 ) set_float(value) Type Name number value Setting the float value 1 2 local convar = se . get_convar ( \"r_aspectratio\" ) convar : set_float ( 1.333 ) set_string(value) Type Name string value Setting the string 1 2 local convar = se . get_convar ( \"sv_skyname\" ) convar : set_string ( \"sky_dust\" )","title":"convar_t"},{"location":"sourceengine/types/convar_t/#convar_t","text":"","title":"convar_t"},{"location":"sourceengine/types/convar_t/#functions","text":"","title":"Functions"},{"location":"sourceengine/types/convar_t/#get_int-number","text":"Returns the int value 1 2 local convar = se . get_convar ( \"r_jiggle_bones\" ) local value = convar : get_int ()","title":"get_int(): number"},{"location":"sourceengine/types/convar_t/#get_float-number","text":"Returns the float value 1 2 local convar = se . get_convar ( \"r_aspectratio\" ) local value = convar : get_float ()","title":"get_float(): number"},{"location":"sourceengine/types/convar_t/#get_string-string","text":"Returns the string 1 2 local convar = se . get_convar ( \"sv_skyname\" ) local str = convar : get_string ()","title":"get_string(): string"},{"location":"sourceengine/types/convar_t/#set_intvalue","text":"Type Name number value Setting the int value 1 2 local convar = se . get_convar ( \"r_jigglebones\" ) convar : set_int ( 0 )","title":"set_int(value)"},{"location":"sourceengine/types/convar_t/#set_floatvalue","text":"Type Name number value Setting the float value 1 2 local convar = se . get_convar ( \"r_aspectratio\" ) convar : set_float ( 1.333 )","title":"set_float(value)"},{"location":"sourceengine/types/convar_t/#set_stringvalue","text":"Type Name string value Setting the string 1 2 local convar = se . get_convar ( \"sv_skyname\" ) convar : set_string ( \"sky_dust\" )","title":"set_string(value)"},{"location":"sourceengine/types/entity_t/","text":"entity_t Functions is_dormant() : bool Returns true if entity is in dormant 1 local is_dormant = entity : is_dormant () is_alive() : bool Returns true if entity is alive 1 local is_alive = entity : is_alive () get_bbox() : rect_t Returns the bounding box 1 local bbox = entity : get_bbox () get_player_hitbox_pos(hitbox_num) : vec3_t Type Name Description number hitbox_num Hitbox number Returns the hitbox pos 1 local headpos = entity : get_player_hitbox_pos ( 0 ) get_index() : number Returns the entity index 1 local index = entity : get_index () get_address() : number Returns the entity address 1 local addr = entity : get_address () get_prop_bool(offset) : bool Type Name Description number offset Prop offset Returns the boolean value by offset get_prop_int(offset) : number Type Name Description number offset Prop offset Returns the integer value by offset get_prop_float(offset) : number Type Name Description number offset Prop offset Returns the float value by offset get_prop_short(offset) : number Type Name Description number offset Prop offset Returns the short value by offset get_prop_double(offset) : number Type Name Description number offset Prop offset Returns the double value by offset get_prop_vector(offset) : vec3_t Type Name Description number offset Prop offset Returns the vector by offset get_prop_angle(offset) : angle_t Type Name Description number offset Prop offset Returns the angle by offset set_prop_bool(offset, value) Type Name Description number offset Prop offset bool value Value Setting the boolean value by offset set_prop_int(offset, value) Type Name Description number offset Prop offset number value Value Setting the integer value by offset set_prop_float(offset, value) Type Name Description number offset Prop offset number value Value Setting the float value by offset set_prop_short(offset, value) Type Name Description number offset Prop offset number value Value Setting the short value by offset set_prop_double(offset, value) Type Name Description number offset Prop offset number value Value Setting the double value by offset set_prop_vector(offset, value) Type Name Description number offset Prop offset vec3_t value Value Setting the vector by offset set_prop_angle(offset, value) Type Name Description number offset Prop offset angle_t value Value Setting the angle by offset","title":"entity_t"},{"location":"sourceengine/types/entity_t/#entity_t","text":"","title":"entity_t"},{"location":"sourceengine/types/entity_t/#functions","text":"","title":"Functions"},{"location":"sourceengine/types/entity_t/#is_dormant-bool","text":"Returns true if entity is in dormant 1 local is_dormant = entity : is_dormant ()","title":"is_dormant(): bool"},{"location":"sourceengine/types/entity_t/#is_alive-bool","text":"Returns true if entity is alive 1 local is_alive = entity : is_alive ()","title":"is_alive(): bool"},{"location":"sourceengine/types/entity_t/#get_bbox-rect_t","text":"Returns the bounding box 1 local bbox = entity : get_bbox ()","title":"get_bbox(): rect_t"},{"location":"sourceengine/types/entity_t/#get_player_hitbox_poshitbox_num-vec3_t","text":"Type Name Description number hitbox_num Hitbox number Returns the hitbox pos 1 local headpos = entity : get_player_hitbox_pos ( 0 )","title":"get_player_hitbox_pos(hitbox_num): vec3_t"},{"location":"sourceengine/types/entity_t/#get_index-number","text":"Returns the entity index 1 local index = entity : get_index ()","title":"get_index(): number"},{"location":"sourceengine/types/entity_t/#get_address-number","text":"Returns the entity address 1 local addr = entity : get_address ()","title":"get_address(): number"},{"location":"sourceengine/types/entity_t/#get_prop_booloffset-bool","text":"Type Name Description number offset Prop offset Returns the boolean value by offset","title":"get_prop_bool(offset): bool"},{"location":"sourceengine/types/entity_t/#get_prop_intoffset-number","text":"Type Name Description number offset Prop offset Returns the integer value by offset","title":"get_prop_int(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_floatoffset-number","text":"Type Name Description number offset Prop offset Returns the float value by offset","title":"get_prop_float(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_shortoffset-number","text":"Type Name Description number offset Prop offset Returns the short value by offset","title":"get_prop_short(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_doubleoffset-number","text":"Type Name Description number offset Prop offset Returns the double value by offset","title":"get_prop_double(offset): number"},{"location":"sourceengine/types/entity_t/#get_prop_vectoroffset-vec3_t","text":"Type Name Description number offset Prop offset Returns the vector by offset","title":"get_prop_vector(offset): vec3_t"},{"location":"sourceengine/types/entity_t/#get_prop_angleoffset-angle_t","text":"Type Name Description number offset Prop offset Returns the angle by offset","title":"get_prop_angle(offset): angle_t"},{"location":"sourceengine/types/entity_t/#set_prop_booloffset-value","text":"Type Name Description number offset Prop offset bool value Value Setting the boolean value by offset","title":"set_prop_bool(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_intoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the integer value by offset","title":"set_prop_int(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_floatoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the float value by offset","title":"set_prop_float(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_shortoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the short value by offset","title":"set_prop_short(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_doubleoffset-value","text":"Type Name Description number offset Prop offset number value Value Setting the double value by offset","title":"set_prop_double(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_vectoroffset-value","text":"Type Name Description number offset Prop offset vec3_t value Value Setting the vector by offset","title":"set_prop_vector(offset, value)"},{"location":"sourceengine/types/entity_t/#set_prop_angleoffset-value","text":"Type Name Description number offset Prop offset angle_t value Value Setting the angle by offset","title":"set_prop_angle(offset, value)"},{"location":"sourceengine/types/game_event_t/","text":"game_event_t Functions get_name(): string Returns the event name 1 local event_name = event : get_name () get_bool(key_name, def_value): bool Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the boolean value from event 1 2 3 if event : get_name () == \"player_chat\" then local teamonly = event : get_bool ( \"teamonly\" , false ) end get_int(key_name, def_value): number Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the int value from event 1 2 3 if event : get_name () == \"player_death\" then local attacker = event : get_int ( \"attacker\" , 0 ) end get_float(key_name, def_value): number Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the float value from event 1 2 3 if event : get_name () == \"bullet_impact\" then local impact_x = event : get_float ( \"x\" , 0 ) end get_string(key_name, def_value): string Type Name Description string key_name Event key name string def_value Default return value if key not found Returns the string from event 1 2 3 if event : get_name () == \"player_death\" then local weapon = event : get_string ( \"weapon\" , \"\" ) end set_bool(key_name, value) Type Name Description string key_name Event key name bool value New value Changes the key value 1 2 3 if event : get_name () == \"player_chat\" then event : set_bool ( \"teamonly\" , false ) end set_int(key_name, value) Type Name Description string key_name Event key name number value New value Changes the key value 1 2 3 if event : get_name () == \"player_death\" then event : set_int ( \"attacker\" , 0 ) end set_float(key_name, value) Type Name Description string key_name Event key name number value New value Changes the key value 1 2 3 if event : get_name () == \"bullet_impact\" then event : set_float ( \"x\" , 0 ) end set_string(key_name, value) Type Name Description string key_name Event key name string value New value Changes the key value 1 2 3 if event : get_name () == \"player_death\" then event : set_string ( \"weapon\" , \"knife_karambit\" ) end","title":"game_event_t"},{"location":"sourceengine/types/game_event_t/#game_event_t","text":"","title":"game_event_t"},{"location":"sourceengine/types/game_event_t/#functions","text":"","title":"Functions"},{"location":"sourceengine/types/game_event_t/#get_name-string","text":"Returns the event name 1 local event_name = event : get_name ()","title":"get_name(): string"},{"location":"sourceengine/types/game_event_t/#get_boolkey_name-def_value-bool","text":"Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the boolean value from event 1 2 3 if event : get_name () == \"player_chat\" then local teamonly = event : get_bool ( \"teamonly\" , false ) end","title":"get_bool(key_name, def_value): bool"},{"location":"sourceengine/types/game_event_t/#get_intkey_name-def_value-number","text":"Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the int value from event 1 2 3 if event : get_name () == \"player_death\" then local attacker = event : get_int ( \"attacker\" , 0 ) end","title":"get_int(key_name, def_value): number"},{"location":"sourceengine/types/game_event_t/#get_floatkey_name-def_value-number","text":"Type Name Description string key_name Event key name bool def_value Default return value if key not found Returns the float value from event 1 2 3 if event : get_name () == \"bullet_impact\" then local impact_x = event : get_float ( \"x\" , 0 ) end","title":"get_float(key_name, def_value): number"},{"location":"sourceengine/types/game_event_t/#get_stringkey_name-def_value-string","text":"Type Name Description string key_name Event key name string def_value Default return value if key not found Returns the string from event 1 2 3 if event : get_name () == \"player_death\" then local weapon = event : get_string ( \"weapon\" , \"\" ) end","title":"get_string(key_name, def_value): string"},{"location":"sourceengine/types/game_event_t/#set_boolkey_name-value","text":"Type Name Description string key_name Event key name bool value New value Changes the key value 1 2 3 if event : get_name () == \"player_chat\" then event : set_bool ( \"teamonly\" , false ) end","title":"set_bool(key_name, value)"},{"location":"sourceengine/types/game_event_t/#set_intkey_name-value","text":"Type Name Description string key_name Event key name number value New value Changes the key value 1 2 3 if event : get_name () == \"player_death\" then event : set_int ( \"attacker\" , 0 ) end","title":"set_int(key_name, value)"},{"location":"sourceengine/types/game_event_t/#set_floatkey_name-value","text":"Type Name Description string key_name Event key name number value New value Changes the key value 1 2 3 if event : get_name () == \"bullet_impact\" then event : set_float ( \"x\" , 0 ) end","title":"set_float(key_name, value)"},{"location":"sourceengine/types/game_event_t/#set_stringkey_name-value","text":"Type Name Description string key_name Event key name string value New value Changes the key value 1 2 3 if event : get_name () == \"player_death\" then event : set_string ( \"weapon\" , \"knife_karambit\" ) end","title":"set_string(key_name, value)"},{"location":"sourceengine/types/player_info_t/","text":"player_info_t Type Name Description string steam_id64 Returns the steam id 64 string name Returns the player name number user_id Returns the user ID bool is_bot Returns true if player is bot","title":"player_info_t"},{"location":"sourceengine/types/player_info_t/#player_info_t","text":"Type Name Description string steam_id64 Returns the steam id 64 string name Returns the player name number user_id Returns the user ID bool is_bot Returns true if player is bot","title":"player_info_t"},{"location":"sourceengine/types/shot_info_t/","text":"shot_info_t - csgo Type Name Description bool manual Is manual shot entity_t target Target player number backtrack How many ticks have been backtracked number hitchance Shot hitchance number hitbox Target hitbox number server_hitgroup Server hitgroup (on hit) string result Result of current shot (hit/spread/desync/unk) number client_damage Expected damage number server_damage Actual damage (on hit) number tick Shot tick bool safe_point Did shoot into safe point vec3_t aim_point Aimpoint position","title":"shot_info_t - csgo"},{"location":"sourceengine/types/shot_info_t/#shot_info_t-csgo","text":"Type Name Description bool manual Is manual shot entity_t target Target player number backtrack How many ticks have been backtracked number hitchance Shot hitchance number hitbox Target hitbox number server_hitgroup Server hitgroup (on hit) string result Result of current shot (hit/spread/desync/unk) number client_damage Expected damage number server_damage Actual damage (on hit) number tick Shot tick bool safe_point Did shoot into safe point vec3_t aim_point Aimpoint position","title":"shot_info_t - csgo"},{"location":"sourceengine/types/usercmd_t/","text":"usercmd_t Type Name bool send_packet number command_number number tick_count angle_t viewangles number forwardmove number sidemove number upmove number buttons number random_seed number mousedx number mousedy","title":"usercmd_t"},{"location":"sourceengine/types/usercmd_t/#usercmd_t","text":"Type Name bool send_packet number command_number number tick_count angle_t viewangles number forwardmove number sidemove number upmove number buttons number random_seed number mousedx number mousedy","title":"usercmd_t"},{"location":"types/angle_t/","text":"angle_t Type Name number pitch number yaw number roll Functions new(pitch, yaw, roll) : angle_t Type Name number pitch number yaw number roll Constructor 1 local angle = angle_t . new ( 0 , 0 , 0 )","title":"angle_t"},{"location":"types/angle_t/#angle_t","text":"Type Name number pitch number yaw number roll","title":"angle_t"},{"location":"types/angle_t/#functions","text":"","title":"Functions"},{"location":"types/angle_t/#newpitch-yaw-roll-angle_t","text":"Type Name number pitch number yaw number roll Constructor 1 local angle = angle_t . new ( 0 , 0 , 0 )","title":"new(pitch, yaw, roll): angle_t"},{"location":"types/color_t/","text":"color_t Type Name number r number g number b number a Functions new(red, green, blue, alpha) : color_t Type Name number r number g number b number a Constructor 1 local color = color_t . new ( 255 , 0 , 0 , 255 )","title":"color_t"},{"location":"types/color_t/#color_t","text":"Type Name number r number g number b number a","title":"color_t"},{"location":"types/color_t/#functions","text":"","title":"Functions"},{"location":"types/color_t/#newred-green-blue-alpha-color_t","text":"Type Name number r number g number b number a Constructor 1 local color = color_t . new ( 255 , 0 , 0 , 255 )","title":"new(red, green, blue, alpha): color_t"},{"location":"types/rect_t/","text":"rect_t Type Name number left number top number right number bottom Functions new(left, top, right, bottom) : rect_t Type Name number left number top number right number bottom Constructor 1 local rect = rect_t . new ( 0 , 0 , 0 , 0 )","title":"rect_t"},{"location":"types/rect_t/#rect_t","text":"Type Name number left number top number right number bottom","title":"rect_t"},{"location":"types/rect_t/#functions","text":"","title":"Functions"},{"location":"types/rect_t/#newleft-top-right-bottom-rect_t","text":"Type Name number left number top number right number bottom Constructor 1 local rect = rect_t . new ( 0 , 0 , 0 , 0 )","title":"new(left, top, right, bottom): rect_t"},{"location":"types/vec2_t/","text":"vec2_t Type Name number x number y Functions new(x, y) : vec2_t Type Name number x number y Constructor 1 local vector2d = vec2_t . new ( 0 , 0 ) length() : number Returns the length of vector 1 2 local vector = vec2_t . new ( 100 , 100 ) local vector_length = vector : length ()","title":"vec2_t"},{"location":"types/vec2_t/#vec2_t","text":"Type Name number x number y","title":"vec2_t"},{"location":"types/vec2_t/#functions","text":"","title":"Functions"},{"location":"types/vec2_t/#newx-y-vec2_t","text":"Type Name number x number y Constructor 1 local vector2d = vec2_t . new ( 0 , 0 )","title":"new(x, y): vec2_t"},{"location":"types/vec2_t/#length-number","text":"Returns the length of vector 1 2 local vector = vec2_t . new ( 100 , 100 ) local vector_length = vector : length ()","title":"length(): number"},{"location":"types/vec3_t/","text":"vec3_t Type Name number x number y number z Functions new(x, y, z) : vec3_t Type Name number x number y number z Constructor 1 local vector = vec3_t . new ( 0 , 0 , 0 ) length() : number Returns the length of vector 1 2 local vector = vec3_t . new ( 100 , 100 , 100 ) local vector_length = vector : length ()","title":"vec3_t"},{"location":"types/vec3_t/#vec3_t","text":"Type Name number x number y number z","title":"vec3_t"},{"location":"types/vec3_t/#functions","text":"","title":"Functions"},{"location":"types/vec3_t/#newx-y-z-vec3_t","text":"Type Name number x number y number z Constructor 1 local vector = vec3_t . new ( 0 , 0 , 0 )","title":"new(x, y, z): vec3_t"},{"location":"types/vec3_t/#length-number","text":"Returns the length of vector 1 2 local vector = vec3_t . new ( 100 , 100 , 100 ) local vector_length = vector : length ()","title":"length(): number"}]}